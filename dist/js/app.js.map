{"version":3,"sources":["app.js"],"names":["location_input","document","querySelector","submit","verify","element","event","addEventListener","e","key","url","value","fetch","method","then","result","json","error","innerHTML","longitude","lon","latitude","lat","data","FormData","append","body","results","console","log","message","temperature","pluie","weatherData","querySelectorAll","weatherDate","setTime","weatherHeure","weatherDay","weatherImg","compass","precedent","suivant","search","month","day","time","Date","getTime","limit","Math","round","base","onreadystatechange","readyState","navigator","geolocation","getCurrentPosition","position","coords","displayData","retourReponse","chartTemp0","hourly","chartTemp6","chartTemp12","chartTemp18","chartTemp23","chartPrecip0","precipProbability","chartPrecip6","chartPrecip12","chartPrecip18","chartPrecip23","Chart","getElementById","type","labels","datasets","yAxisID","label","borderColor","fill","options","legend","display","title","text","scales","yAxes","id","ticks","min","max","gridLines","drawOnChartArea","moon","daily","moonPhase","riseHour","riseMinute","setHour","setMinute","currentDate","currently","set","sunsetTime","rise","sunriseTime","getHours","getMinutes","getDay","getDate","getMonth","getFullYear","summary","src","icon","pressure","windSpeed","humidity","uvIndex","visibility","style","transform","windBearing","displayHourly","catch","connexionLogin","loginLogin","passLogin","window","location","replace","connexion_login","login_login","pass_login","validerRegister","mailRegister","passRegister","prenomRegister","sexeRegister","adresseRegister","villeRegister","colorRegister","verifyRegister","i","length","ville","address","city","town","route","road","backgroundColor"],"mappings":"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","file":"app.js","sourcesContent":["const location_input = document.querySelector(\"#location-input\");\nconst submit = document.querySelector(\"#adress\");\n// const longitude = document.querySelector(\".longitude\");\n// const latitude = document.querySelector(\".latitude\");\n\nfunction verify(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n           \n        \n            let city = location_input.value;\n            let url = `https://nominatim.openstreetmap.org/search?format=json&city=${city}`;\n\n            fetch(url, {method: \"POST\"})\n            .then( (result) => { return result.json() })\n            .then( (result) => {\n                if(!result.error){\n                    // console.log(result[0]);\n                    // document.querySelector(\".longitude\").innerHTML = result[0].lon;\n                    // document.querySelector(\".latitude\").innerHTML = result[0].lat;\n                    \n                    let longitude = result[0].lon;\n                    let latitude = result[0].lat;\n\n                    let data = new FormData();\n                    \n                    data.append(\"latitude\", latitude);\n                    data.append(\"longitude\", longitude);\n\n                    fetch(\"/weather/get\", {method: \"POST\", body: data})\n                    .then( (results) => { return results.json() })\n                    .then( (results) => {\n\n                        if(!results.error){\n                            console.log(results);\n                            // window.location.replace(\"/weather/get\");\n                        } else {\n                            document.querySelector(\"#error\").innerHTML = results.error;\n                        }\n                    });\n                } else {\n                    document.querySelector(\"#error\").innerHTML = result.error;\n                }\n            });\n\n        }\n    })\n}\n\nverify(submit, \"click\");\nverify(location_input, \"keydown\");\nconst message = document.querySelector(\"#message\");\nconst temperature = document.querySelector(\"#tempData\");\nconst pluie = document.querySelector(\"#tempRain\");\nconst weatherData = document.querySelectorAll(\".data\");\nconst weatherDate = document.querySelector(\"#weather-date\");\nconst setTime = document.querySelector(\"#setTime\");\nconst weatherHeure = document.querySelector(\"#weather-heure\");\nconst weatherDay = document.querySelector(\"#weather-day\");\nconst weatherImg = document.querySelector(\"#weather-img\");\nconst compass = document.querySelector(\"#compass\");\nconst precedent = document.querySelector(\"#precedent\");\nconst suivant = document.querySelector(\"#suivant\");\nconst search = document.querySelector(\"#search\");\nconst month = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\nconst day = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\nlet time = new Date();\ntime = time.getTime();\ntime = Math.round(time/1000);\nlet limit = time + (86400*6);\nlet base = time;\n\n\ndocument.onreadystatechange = function () {\n    console.log(\"onreadystatechange marche\");\n    if (document.readyState === \"complete\") {\n        console.log(\"if complete marche\");\n        if (navigator.geolocation) { /*demander l'autorisation d'obtenir la géolocalisation*/\n        navigator.geolocation.getCurrentPosition(function (position) {\n\n            let latitude = position.coords.latitude;\n            let longitude = position.coords.longitude;\n\n            let data = new FormData();\n\n            data.append(\"latitude\", latitude);\n            data.append(\"longitude\", longitude);\n\n            console.log(\"if geolocalisation marche\");\n            fetch(\"/weather/get\", {method: \"POST\", body: data})\n                .then((retourReponse) => {\n                    return retourReponse.json();\n                })\n                .then((retourReponse) => {\n\n                    displayData(retourReponse);\n\n                                    \n                    setTime.addEventListener(\"change\", () => {\n                        \n                        displayHourly(retourReponse);\n\n                    })\n\n                }).catch((error) => {\n                    console.log(error);\n                });\n\n\n\n                precedent.addEventListener('click', () => {\n\n\n                    let data = new FormData();\n                    let latitude = position.coords.latitude;\n                    let longitude = position.coords.longitude;\n                    time -= 86400;\n\n                    console.log(time);\n                    console.log(base);\n\n\n                    time === base ? precedent.style.display = \"none\" : precedent.style.display = \"block\";\n                    time === limit ? suivant.style.display = \"none\" : suivant.style.display = \"block\";\n\n                    if(time === base) {\n                        precedent.style.display = \"none\";\n                    } else {\n                        precedent.style.display = \"block\";\n                    }\n\n\n                    data.append(\"latitude\", latitude);\n                    data.append(\"longitude\", longitude);\n                    data.append(\"time\", time);\n\n                    fetch(\"/weather/get\", {method: \"POST\", body: data})\n                    .then((retourReponse) => {\n                        return retourReponse.json();\n                    })\n                    .then((retourReponse) => {\n\n                        // console.log(retourReponse);\n\n                        displayData(retourReponse);\n\n                        setTime.addEventListener(\"change\", () => {\n                        \n                            displayHourly(retourReponse);\n                            \n    \n                        })\n\n\n\n                    }).catch((error) => {\n                        console.log(error);\n                    });\n                    \n                })\n                suivant.addEventListener('click', () => {\n\n\n                    let data = new FormData();\n                    let latitude = position.coords.latitude;\n                    let longitude = position.coords.longitude;\n                    time += 86400;\n\n                    console.log(time);\n                    console.log(limit);\n\n                    if(time === limit) {\n                        suivant.style.display = \"none\";\n                    } else {\n                        suivant.style.display = \"block\";\n                    }\n\n                    time === base ? precedent.style.display = \"none\" : precedent.style.display = \"block\";\n                    time === limit ? suivant.style.display = \"none\" : suivant.style.display = \"block\";\n\n                    data.append(\"latitude\", latitude);\n                    data.append(\"longitude\", longitude);\n                    data.append(\"time\", time);\n\n                    fetch(\"/weather/get\", {method: \"POST\", body: data})\n                    .then((retourReponse) => {\n                        return retourReponse.json();\n                    })\n                    .then((retourReponse) => {\n\n                        // console.log(retourReponse);\n\n                        displayData(retourReponse);\n\n                        setTime.addEventListener(\"change\", () => {\n                        \n                            displayHourly(retourReponse);\n                            \n    \n                        })\n\n\n\n                    }).catch((error) => {\n                        console.log(error);\n                    });\n                    \n                })\n\n\n\n                function displayData(retourReponse) {\n                    let chartTemp0 = Math.round(retourReponse.hourly.data[0].temperature);\n                    let chartTemp6 = Math.round(retourReponse.hourly.data[6].temperature);\n                    let chartTemp12 = Math.round(retourReponse.hourly.data[12].temperature);\n                    let chartTemp18 = Math.round(retourReponse.hourly.data[18].temperature);\n                    let chartTemp23 = Math.round(retourReponse.hourly.data[23].temperature);\n\n                    let chartPrecip0 = Math.round(retourReponse.hourly.data[0].precipProbability * 100);\n                    let chartPrecip6 = Math.round(retourReponse.hourly.data[6].precipProbability * 100);\n                    let chartPrecip12 = Math.round(retourReponse.hourly.data[12].precipProbability * 100);\n                    let chartPrecip18 = Math.round(retourReponse.hourly.data[18].precipProbability * 100);\n                    let chartPrecip23 = Math.round(retourReponse.hourly.data[23].precipProbability * 100);\n\n                    new Chart(document.getElementById(\"summaryChart\"), {\n                        type: 'line',\n                        data: {\n                          labels: ['00:00', '06:00', '12:00', '18:00', '23:00'],\n                          datasets: [{ \n                              data: [chartTemp0, chartTemp6, chartTemp12, chartTemp18, chartTemp23],\n                              yAxisID: 'temperature',\n                              label: \"Température\",\n                              borderColor: \"#980000\",\n                              fill: true\n                            }, { \n                              data: [chartPrecip0, chartPrecip6, chartPrecip12, chartPrecip18, chartPrecip23],\n                              yAxisID: 'rain',\n                              label: \"Précipitation\",\n                              borderColor: \"#030340\",\n                              fill: true\n                            }\n                          ]\n                        },\n                        options: {\n                            legend:{\n                                display: false\n                            },\n                            title: {\n                                display: false,\n                                text: 'World population per region (in millions)'\n                            },\n                            scales: {\n                                yAxes: [{\n                                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                                    display: true,\n                                    position: 'left',\n                                    id: 'temperature',\n                                }, {\n                                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                                    display: true,\n                                    position: 'right',\n                                    id: 'rain',\n                                    ticks: {\n                                        min: 0,\n                                        max: 100\n                                    },\n                    \n                                    // grid line settings\n                                    gridLines: {\n                                        drawOnChartArea: false, // only want the grid lines for one axis to show up\n                                    },\n                                }],\n                            }\n                        }\n                      });\n                      \n\n\n                    let phase = (Math.round(retourReponse.daily.data[0].moonPhase * 8) / 8);\n                    let moon = \"\";\n\n                    switch (phase) {\n                        case 0:\n                        case 1:\n                            moon = \"Nouvelle lune\";\n                            break;\n                        case 0.125: \n                        case 0.875:\n                            moon = \"Croissant de lune\";                            \n                            break;\n                        case 0.25:\n                        case 0.375:\n                        case 0.625: \n                        case 0.75:\n                            moon = \"Demi lune\";                                                        \n                            break;\n                        case 0.5:\n                            moon = \"Pleine lune\";                                               \n                            break;\n                    }\n\n\n                    let currentDate = new Date(retourReponse.currently.time * 1000);\n\n                    let set = new Date(retourReponse.daily.data[0].sunsetTime * 1000);\n                    let rise = new Date(retourReponse.daily.data[0].sunriseTime * 1000);\n                    let riseHour, riseMinute, setHour, setMinute;\n\n                    rise.getHours() < 10 ? riseHour = \"0\" + rise.getHours() : riseHour = rise.getHours();\n                    rise.getMinutes() < 10 ? riseMinute = \"0\" + rise.getMinutes() : riseMinute = rise.getMinutes();\n\n                    set.getHours() < 10 ? setHour = \"0\" + set.getHours() : setHour = set.getHours();\n                    set.getMinutes() < 10 ? setMinute = \"0\" + set.getMinutes() : setMinute = set.getMinutes();\n                    \n                    weatherDay.innerHTML = day[currentDate.getDay()];\n                    weatherDate.innerHTML = currentDate.getDate() + \" \" + month[currentDate.getMonth()] + \" \" + currentDate.getFullYear();\n                    message.innerHTML = retourReponse.currently.summary;\n                    temperature.innerHTML = Math.round(retourReponse.currently.temperature) + \"°C\";\n                    weatherImg.src = \"../Assets/img/weather-icons/\" + retourReponse.currently.icon + \".png\";\n                    pluie.innerHTML = Math.round(retourReponse.currently.precipProbability * 100) + \"%\";\n                    weatherData[0].innerHTML = Math.round(retourReponse.currently.pressure) + \" hpa\";\n                    weatherData[1].innerHTML = Math.round(retourReponse.currently.windSpeed) + \" m/s\";\n                    weatherData[2].innerHTML = Math.round(retourReponse.currently.humidity) + \"%\";\n                    weatherData[3].innerHTML = Math.round(retourReponse.currently.precipProbability * 100) + \"%\";\n                    weatherData[4].innerHTML = Math.round(retourReponse.currently.temperature) + \"°C\";\n                    weatherData[5].innerHTML = Math.round(retourReponse.currently.uvIndex);\n                    weatherData[6].innerHTML = Math.round(retourReponse.currently.visibility) + \" km\";\n                    weatherData[7].innerHTML = riseHour + \":\" + riseMinute;\n                    weatherData[8].innerHTML = setHour + \":\" + setMinute;\n                    weatherData[9].innerHTML = moon;\n                    setTime.value = currentDate.getHours();\n                    weatherHeure.innerHTML = currentDate.getHours() + \":00\";\n                    compass.style.transform = \"rotate(\" + retourReponse.currently.windBearing + \"deg\";\n                }\n\n                function displayHourly(retourReponse) {\n                    message.innerHTML = retourReponse.hourly.data[setTime.value].summary;\n                    temperature.innerHTML = Math.round(retourReponse.hourly.data[setTime.value].temperature) + \"°C\";\n                    weatherImg.src = \"../Assets/img/weather-icons/\" + retourReponse.hourly.data[setTime.value].icon + \".png\";\n                    pluie.innerHTML = Math.round(retourReponse.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n                    weatherData[0].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].pressure) + \" hpa\";\n                    weatherData[1].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].windSpeed) + \" m/s\";\n                    weatherData[2].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].humidity) + \"%\";\n                    weatherData[3].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n                    weatherData[4].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].temperature) + \"°C\";\n                    weatherData[5].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].uvIndex);\n                    weatherData[6].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].visibility) + \" km\";\n                    weatherHeure.innerHTML = setTime.value + \":00\";\n                    compass.style.transform = \"rotate(\" + retourReponse.hourly.data[setTime.value].windBearing + \"deg\";\n\n                    \n                }\n\n            })\n        }\n    }\n}\n\n\n\nconst connexionLogin = document.querySelector(\"#connexion_login\");\nconst loginLogin = document.querySelector(\"#login_login\");\nconst passLogin = document.querySelector(\"#pass_login\");\n\nfunction verify(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n           \n            let data = new FormData();\n            data.append(\"login\", loginLogin.value);\n            data.append(\"pass\", passLogin.value);\n        \n            fetch(\"/login/verif\", {method: \"POST\", body: data})\n            .then( (result) => { return result.json() } )\n            .then( (result) => {\n                // console.log(result.error);\n                if(!result.error){\n                    console.log(result);\n                    window.location.replace(\"/user\");\n                } else {\n                    document.querySelector(\"#error\").innerHTML = result.error;\n                }\n            });\n        }\n    })\n}\n\nverify(connexion_login, \"click\");\nverify(login_login, \"keydown\");\nverify(pass_login, \"keydown\");\nnew Chart(document.getElementById(\"summaryChart\"), {\n    type: 'line',\n    data: {\n      labels: ['00:00', '06:00', '12:00', '18:00', '23:00'],\n      datasets: [{ \n          data: [1, 3, 8, 5, 2],\n          yAxisID: 'temperature',\n          label: \"Température\",\n          borderColor: \"#980000\",\n          fill: true\n        }, { \n          data: [0, 2, 5, 10, 3],\n          yAxisID: 'rain',\n          label: \"Précipitation\",\n          borderColor: \"#030340\",\n          fill: true\n        }\n      ]\n    },\n    options: {\n        legend:{\n            display: false\n        },\n        title: {\n            display: false,\n            text: 'World population per region (in millions)'\n        },\n        scales: {\n            yAxes: [{\n                type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                display: true,\n                position: 'left',\n                id: 'temperature',\n            }, {\n                type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                display: true,\n                position: 'right',\n                id: 'rain',\n                ticks: {\n                    min: 0,\n                    max: 100\n                },\n\n                // grid line settings\n                gridLines: {\n                    drawOnChartArea: false, // only want the grid lines for one axis to show up\n                },\n            }],\n        }\n    }\n  });\n  \n// $('.message a').click(function(){\n//     $('form').animate({height: \"toggle\", opacity: \"toggle\"}, \"slow\");\n//  });\n\nconst validerRegister = document.querySelector(\"#valider-register\");\nconst mailRegister = document.querySelector(\"#mail-register\");\nconst passRegister = document.querySelector(\"#pass-register\");\nconst prenomRegister = document.querySelector(\"#prenom-register\");\nconst sexeRegister = document.querySelector(\"#sexe-register\");\nconst adresseRegister = document.querySelector(\"#adresse-register\");\nconst villeRegister = document.querySelector(\"#ville-register\");\nconst colorRegister = document.querySelector(\"#color-register\");\n\n\n\ndocument.onreadystatechange = function () {\n    if (document.readyState === \"complete\") {\n        if (navigator.geolocation) { /*demander l'autorisation d'obtenir la géolocalisation*/\n            navigator.geolocation.getCurrentPosition(function (position) {\n\n                let latitude = position.coords.latitude;\n                let longitude = position.coords.longitude;\n                let link = \"https://nominatim.openstreetmap.org/reverse?format=json&lat=\" + latitude + \"&lon=\" + longitude;\n\n                fetch(link, {method: \"POST\"})\n                .then( (result) => { return result.json() } )\n                .then( (result) => {\n                // console.log(result);\n\n                let ville = typeof result.address.city !== 'undefined' ? result.address.city:result.address.town; \n                let route = result.address.road;\n                \n                adresseRegister.value = route;\n                villeRegister.value = ville;\n\n                });\n\n            })\n        }\n    }\n}\n\n\n\n\n\ncolorRegister.addEventListener('click', () => {\n    colorRegister.style.backgroundColor = colorRegister.value; \n})\n\nfunction verifyRegister(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n            let data = new FormData();\n            data.append(\"mail\", mailRegister.value);\n            data.append(\"pass\", passRegister.value);\n            data.append(\"prenom\", prenomRegister.value);\n            data.append(\"sexe\", sexeRegister.value);\n            data.append(\"color\", colorRegister.value);\n            data.append(\"adresse\", adresseRegister.value);\n            data.append(\"ville\", villeRegister.value);\n        \n            fetch(\"/register/verif\", {method: \"POST\", body: data})\n            .then( (result) => { return result.json() } )\n            .then( (result) => {\n                console.log(result);\n                if(!result.message){\n                    document.querySelector(\".message\").innerHTML = \"Inscription réussie, vous allez être redirigé.\";\n                    // setTimeout(function(){\n                    //     window.location.replace(\"/weather\");\n                    // }, 3000);\n                } else {\n                    document.querySelector(\".message\").innerHTML = \"\";\n                    for (let i = 0; i < result.message.length; i++) {\n                        document.querySelector(\".message\").innerHTML += result.message[i] + '</br>';\n                    }\n                }\n                }\n            );\n        }\n    })\n}\n\nverifyRegister(validerRegister, \"click\");\nverifyRegister(mailRegister, \"keydown\");\nverifyRegister(passRegister, \"keydown\");\nverifyRegister(prenomRegister, \"keydown\");\nverifyRegister(adresseRegister, \"keydown\");\nverifyRegister(villeRegister, \"keydown\");\n"]}