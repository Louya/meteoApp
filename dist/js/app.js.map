{"version":3,"sources":["app.js"],"names":["location_input","document","querySelector","submit","verify","element","event","addEventListener","e","key","url","value","fetch","method","then","result","json","error","innerHTML","longitude","lon","latitude","lat","data","FormData","append","body","results","console","log","chartTemp0","Math","round","hourly","temperature","chartTemp6","chartTemp12","chartTemp18","chartTemp23","chartPrecip0","precipProbability","chartPrecip6","chartPrecip12","chartPrecip18","chartPrecip23","Chart","getElementById","type","labels","datasets","yAxisID","label","borderColor","fill","options","legend","display","title","text","scales","yAxes","position","id","ticks","min","max","gridLines","drawOnChartArea","moon","daily","moonPhase","riseHour","riseMinute","setHour","setMinute","currentDate","Date","currently","time","set","sunsetTime","rise","sunriseTime","getHours","getMinutes","weatherDay","day","getDay","weatherDate","getDate","month","getMonth","getFullYear","message","summary","pluie","weatherData","pressure","windSpeed","humidity","uvIndex","visibility","setTime","weatherHeure","compass","style","transform","windBearing","temp","rain","clothes","j","i","array_clothes","length","classList","add","set_clothes","remove","genre_male","genre_female","querySelectorAll","weatherImg","precedent","suivant","search","set_clothes1","set_clothes2","set_clothes3","set_clothes4","getTime","limit","base","displayData","retourReponse","src","icon","displayHourly","getPreviousDay","catch","getNextDay","getInitialData","onreadystatechange","readyState","navigator","geolocation","getCurrentPosition","coords","city","address","town","connexionLogin","loginLogin","passLogin","window","location","replace","connexionlogin","loginlogin","passlogin","avatar_m1","avatar_m2","avatar_m3","avatar_m4","avatar_f1","avatar_f2","avatar_f3","avatar_f4","array_avatar","array_skin","skin1","skin2","skin3","skin4","validerRegister","mailRegister","passRegister","prenomRegister","sexeRegister","adresseRegister","villeRegister","colorRegister","verifyRegister","ville","route","road","backgroundColor"],"mappings":"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","file":"app.js","sourcesContent":["const location_input = document.querySelector(\"#search\");\nconst submit = document.querySelector(\"#adress\");\n\n\nfunction verify(element,event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n           \n        \n            let city = location_input.value;\n            let url = `https://nominatim.openstreetmap.org/search?format=json&city=${city}`;\n\n            fetch(url, {method: \"POST\"})\n            .then( (result) => { return result.json() })\n            .then( (result) => {\n                if(!result.error){\n    \n                    let longitude = result[0].lon;\n                    let latitude = result[0].lat;\n\n                    let data = new FormData();\n                    \n                    data.append(\"latitude\", latitude);\n                    data.append(\"longitude\", longitude);\n\n                    fetch(\"/weather/get\", {method: \"POST\", body: data})\n                    .then( (results) => { return results.json() })\n                    .then( (results) => {\n                        if(!results.error){\n                            console.log(results);\n                            \n                            let chartTemp0 = Math.round(results.hourly.data[0].temperature);\n                            let chartTemp6 = Math.round(results.hourly.data[6].temperature);\n                            let chartTemp12 = Math.round(results.hourly.data[12].temperature);\n                            let chartTemp18 = Math.round(results.hourly.data[18].temperature);\n                            let chartTemp23 = Math.round(results.hourly.data[23].temperature);\n        \n                            let chartPrecip0 = Math.round(results.hourly.data[0].precipProbability);\n                            let chartPrecip6 = Math.round(results.hourly.data[6].precipProbability);\n                            let chartPrecip12 = Math.round(results.hourly.data[12].precipProbability);\n                            let chartPrecip18 = Math.round(results.hourly.data[18].precipProbability);\n                            let chartPrecip23 = Math.round(results.hourly.data[23].precipProbability);\n            \n                            new Chart(document.getElementById(\"summaryChart\"), {\n                                type: 'line',\n                                data: {\n                                  labels: ['00:00', '06:00', '12:00', '18:00', '23:00'],\n                                  datasets: [{ \n                                      data: [chartTemp0, chartTemp6, chartTemp12, chartTemp18, chartTemp23],\n                                      yAxisID: 'temperature',\n                                      label: \"Température\",\n                                      borderColor: \"#980000\",\n                                      fill: true\n                                    }, { \n                                      data: [chartPrecip0, chartPrecip6, chartPrecip12, chartPrecip18, chartPrecip23],\n                                      yAxisID: 'rain',\n                                      label: \"Précipitation\",\n                                      borderColor: \"#030340\",\n                                      fill: true\n                                    }\n                                  ]\n                                },\n                                options: {\n                                    legend:{\n                                        display: false\n                                    },\n                                    title: {\n                                        display: false,\n                                        text: 'World population per region (in millions)'\n                                    },\n                                    scales: {\n                                        yAxes: [{\n                                            type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                                            display: true,\n                                            position: 'left',\n                                            id: 'temperature',\n                                        }, {\n                                            type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                                            display: true,\n                                            position: 'right',\n                                            id: 'rain',\n                                            ticks: {\n                                                min: 0,\n                                                max: 100\n                                            },\n                            \n                                            // grid line settings\n                                            gridLines: {\n                                                drawOnChartArea: false, // only want the grid lines for one axis to show up\n                                            },\n                                        }],\n                                    }\n                                }\n                              });\n        \n                            let phase = (Math.round(results.daily.data[0].moonPhase * 8) / 8);\n                            let moon = \"\";\n        \n                            switch (phase) {\n                                case 0 || 1:\n                                    moon = \"Nouvelle lune\";\n                                    break;\n                                case 0.125 || 0.775:\n                                    moon = \"Croissant de lune\";                            \n                                    break;\n                                case 0.25 || 0.75:\n                                    moon = \"Demi lune\";                                                        \n                                    break;\n                                case 0.5:\n                                    moon = \"Pleine lune\";                                                        \n                                    break;\n                            }\n        \n        \n                            let currentDate = new Date(results.currently.time * 1000);\n        \n                            let set = new Date(results.daily.data[0].sunsetTime * 1000);\n                            let rise = new Date(results.daily.data[0].sunriseTime * 1000);\n                            let riseHour, riseMinute, setHour, setMinute;\n        \n                            rise.getHours() < 10 ? riseHour = \"0\" + rise.getHours() : riseHour = rise.getHours();\n                            rise.getMinutes() < 10 ? riseMinute = \"0\" + rise.getMinutes() : riseMinute = rise.getMinutes();\n        \n                            set.getHours() < 10 ? setHour = \"0\" + set.getHours() : setHour = set.getHours();\n                            set.getMinutes() < 10 ? setMinute = \"0\" + set.getMinutes() : setMinute = set.getMinutes();\n                            \n                            weatherDay.innerHTML = day[currentDate.getDay()];\n                            weatherDate.innerHTML = currentDate.getDate() + \" \" + month[currentDate.getMonth()] + \" \" + currentDate.getFullYear();\n                            message.innerHTML = results.currently.summary;\n                            temperature.innerHTML = Math.round(results.currently.temperature) + \"°C\";\n                            pluie.innerHTML = Math.round(results.currently.precipProbability * 100) + \"%\";\n                            weatherData[0].innerHTML = Math.round(results.currently.pressure) + \" hpa\";\n                            weatherData[1].innerHTML = Math.round(results.currently.windSpeed) + \" m/s\";\n                            weatherData[2].innerHTML = Math.round(results.currently.humidity) + \"%\";\n                            weatherData[3].innerHTML = Math.round(results.currently.precipProbability * 100) + \"%\";\n                            weatherData[4].innerHTML = Math.round(results.currently.temperature) + \"°C\";\n                            weatherData[5].innerHTML = Math.round(results.currently.uvIndex);\n                            weatherData[6].innerHTML = Math.round(results.currently.visibility) + \" km\";\n                            weatherData[7].innerHTML = riseHour + \":\" + riseMinute;\n                            weatherData[8].innerHTML = setHour + \":\" + setMinute;\n                            weatherData[9].innerHTML = moon;\n                            setTime.value = currentDate.getHours();\n                            weatherHeure.innerHTML = currentDate.getHours() + \":00\";\n                            compass.style.transform = \"rotate(\" + results.currently.windBearing + \"deg\";\n        \n                            let temp = Math.round(results.hourly.data[setTime.value].temperature);\n                            let rain = results.hourly.data[setTime.value].precipProbability;\n                    \n                            j = 0;\n                            clothes(temp, rain, j);\n\n                            genre_male.addEventListener(\"click\", (e) => {\n                                j = 0;\n                                clothes(temp, rain, j);\n                            })\n                            genre_female.addEventListener(\"click\", (e) => {\n                                j = 4;\n                                clothes(temp, rain, j);\n                            })\n\n                            // Changement vêtements\n                            function clothes(temp, rain, j){\n                            \n                                if(temp >= 17 && rain < 0.3){\n                                    for (let i = 0; i < array_clothes.length; i++) {\n                                        array_clothes[i].classList.add(\"invisible\");\n                                    }\n                                set_clothes[j+1].classList.remove(\"invisible\");\n                                \n                                }else if(temp >= 17 && rain > 0.3){\n                                    for (let i = 0; i < array_clothes.length; i++) {\n                                        array_clothes[i].classList.add(\"invisible\");\n                                    }\n                                    set_clothes[j+2].classList.remove(\"invisible\");\n        \n                                }else if(temp < 17 && rain < 0.3){\n                                    for (let i = 0; i < array_clothes.length; i++) {\n                                        array_clothes[i].classList.add(\"invisible\");\n                                    }\n                                    set_clothes[j+3].classList.remove(\"invisible\");\n        \n                                }else if(temp < 17 && rain > 0.3){\n                                    for (let i = 0; i < array_clothes.length; i++) {\n                                        array_clothes[i].classList.add(\"invisible\");\n                                    }\n                                    set_clothes[j+4].classList.remove(\"invisible\");\n                                }\n                            }                    \n\n                            setTime.addEventListener(\"change\", () => {\n                                \n                                message.innerHTML = results.hourly.data[setTime.value].summary;\n                                temperature.innerHTML = Math.round(results.hourly.data[setTime.value].temperature) + \"°C\";\n                                pluie.innerHTML = Math.round(results.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n                                weatherData[0].innerHTML = Math.round(results.hourly.data[setTime.value].pressure) + \" hpa\";\n                                weatherData[1].innerHTML = Math.round(results.hourly.data[setTime.value].windSpeed) + \" m/s\";\n                                weatherData[2].innerHTML = Math.round(results.hourly.data[setTime.value].humidity) + \"%\";\n                                weatherData[3].innerHTML = Math.round(results.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n                                weatherData[4].innerHTML = Math.round(results.hourly.data[setTime.value].temperature) + \"°C\";\n                                weatherData[5].innerHTML = Math.round(results.hourly.data[setTime.value].uvIndex);\n                                weatherData[6].innerHTML = Math.round(results.hourly.data[setTime.value].visibility) + \" km\";\n                                weatherHeure.innerHTML = setTime.value + \":00\";\n                                compass.style.transform = \"rotate(\" + results.hourly.data[setTime.value].windBearing + \"deg\";\n                                \n                                \n                                let temp = Math.round(results.hourly.data[setTime.value].temperature);\n                                let rain = results.hourly.data[setTime.value].precipProbability;\n                                console.log(temp);\n                                console.log(rain);\n                                j = 0;\n                                clothes(temp, rain, j);\n    \n                                genre_male.addEventListener(\"click\", (e) => {\n                                    j = 0;\n                                    clothes(temp, rain, j);\n                                })\n                                genre_female.addEventListener(\"click\", (e) => {\n                                    j = 4;\n                                    clothes(temp, rain, j);\n                                })\n                             \n                            })\n\n                        } else {\n                            document.querySelector(\"#error\").innerHTML = results.error;\n                        }\n                    });\n                    \n                } else {\n                    document.querySelector(\"#error\").innerHTML = result.error;\n                }\n            });\n        }\n    })\n}\n\nverify(submit, \"click\");\nverify(location_input, \"keydown\");\nconst message = document.querySelector(\"#message\");\nconst temperature = document.querySelector(\"#tempData\");\nconst pluie = document.querySelector(\"#tempRain\");\nconst weatherData = document.querySelectorAll(\".data\");\nconst weatherDate = document.querySelector(\"#weather-date\");\nconst setTime = document.querySelector(\"#setTime\");\nconst weatherHeure = document.querySelector(\"#weather-heure\");\nconst weatherDay = document.querySelector(\"#weather-day\");\nconst weatherImg = document.querySelector(\"#weather-img\");\nconst compass = document.querySelector(\"#compass\");\nconst precedent = document.querySelector(\"#precedent\");\nconst suivant = document.querySelector(\"#suivant\");\nconst search = document.querySelector(\"#search\");\nconst month = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\nconst day = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\n\nconst set_clothes1 = document.querySelector(\"#m_set1\");\nconst set_clothes2 = document.querySelector(\"#m_set2\");\nconst set_clothes3 = document.querySelector(\"#m_set3\");\nconst set_clothes4 = document.querySelector(\"#m_set4\");\nconst array_clothes = document.querySelectorAll(\".img-clothes\");\n\nlet time = new Date();\ntime = time.getTime();\ntime = Math.round(time/1000);\nlet limit = time + (86400*6);\nlet base = time;\nvar latitude = 48.866667;\nvar longitude = 2.333333;\nvar result;\n\ngetInitialData();\n\n\n\n\ndocument.onreadystatechange = function () {\n    console.log(\"onreadystatechange marche\");\n    if (document.readyState === \"complete\") {\n\n        if (navigator.geolocation) { /*demander l'autorisation d'obtenir la géolocalisation*/\n        navigator.geolocation.getCurrentPosition(function (position) {\n\n\n            time = new Date();\n            time = time.getTime();\n            time = Math.round(time/1000);\n            limit = time + (86400*6);\n            base = time;\n\n            precedent.style.display = \"none\";\n\n            console.log(\"je passe\");\n            latitude = position.coords.latitude;\n            longitude = position.coords.longitude;\n\n            let data = new FormData();\n\n            data.append(\"latitude\", latitude);\n            data.append(\"longitude\", longitude);\n\n            fetch(\"/weather/get\", {method: \"POST\", body: data})\n                .then((retourReponse) => {\n                    return retourReponse.json();\n                })\n                .then((retourReponse) => {\n\n                    result = retourReponse;\n\n                    displayData(retourReponse);\n\n                                    \n                    // setTime.addEventListener(\"change\", displayHourly(retourReponse));\n\n                    // Changement vêtements\n                    let temp = Math.round(retourReponse.hourly.data[setTime.value].temperature);\n                    let rain = retourReponse.hourly.data[setTime.value].precipProbability;\n\n                    function clothes(temp, rain){\n\n                        if(temp < 15 && rain < 0.3){\n                            for (let i = 0; i < array_clothes.length; i++) {\n                                array_clothes[i].classList.add(\"invisible\");\n                            }\n                            set_clothes3.classList.remove(\"invisible\");\n                        \n                        }else if(temp < 15 && rain > 0.3){\n                            for (let i = 0; i < array_clothes.length; i++) {\n                                array_clothes[i].classList.add(\"invisible\");\n                            }\n                            set_clothes4.classList.remove(\"invisible\");\n                        \n                        }else if(temp >= 15 && rain < 0.3){\n                            for (let i = 0; i < array_clothes.length; i++) {\n                                array_clothes[i].classList.add(\"invisible\");\n                            }\n                            set_clothes1.classList.remove(\"invisible\");\n                        \n                        }else if(temp >= 15 && rain > 0.3){\n                            for (let i = 0; i < array_clothes.length; i++) {\n                                array_clothes[i].classList.add(\"invisible\");\n                            }\n                            set_clothes2.classList.remove(\"invisible\");\n                                }\n                        \n                        }\n                                                            \n                        clothes(temp, rain);\n                        \n                        let lat = retourReponse.latitude;\n                        let lon = retourReponse.longitude;\n                        let url = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${lon}`;\n                        \n                        fetch(url, {method: \"POST\"})\n                        .then( (result) => { return result.json() })\n                        .then( (result) => {\n                            if(!result.error){\n                                let city = typeof result.address.city !== 'undefined' ? result.address.city:result.address.town; \n                                document.querySelector(\"#search\").value = city;\n                            }\n                        })\n\n                }).catch((error) => {\n                    console.log(error);\n                });\n\n                \n                // getPreviousDay(latitude, longitude);\n                // getNextDay(latitude, longitude);\n\n            })\n        } else {\n            console.log(\"Le service de géolocalisation n'est pas disponible sur votre navigateur.\");\n        }\n    }\n}\n\n\nfunction displayData(retourReponse) {\n    let chartTemp0 = Math.round(retourReponse.hourly.data[0].temperature);\n    let chartTemp6 = Math.round(retourReponse.hourly.data[6].temperature);\n    let chartTemp12 = Math.round(retourReponse.hourly.data[12].temperature);\n    let chartTemp18 = Math.round(retourReponse.hourly.data[18].temperature);\n    let chartTemp23 = Math.round(retourReponse.hourly.data[23].temperature);\n\n    let chartPrecip0 = Math.round(retourReponse.hourly.data[0].precipProbability * 100);\n    let chartPrecip6 = Math.round(retourReponse.hourly.data[6].precipProbability * 100);\n    let chartPrecip12 = Math.round(retourReponse.hourly.data[12].precipProbability * 100);\n    let chartPrecip18 = Math.round(retourReponse.hourly.data[18].precipProbability * 100);\n    let chartPrecip23 = Math.round(retourReponse.hourly.data[23].precipProbability * 100);\n\n    new Chart(document.getElementById(\"summaryChart\"), {\n        type: 'line',\n        data: {\n          labels: ['00:00', '06:00', '12:00', '18:00', '23:00'],\n          datasets: [{ \n              data: [chartTemp0, chartTemp6, chartTemp12, chartTemp18, chartTemp23],\n              yAxisID: 'temperature',\n              label: \"Température\",\n              borderColor: \"#980000\",\n              fill: true\n            }, { \n              data: [chartPrecip0, chartPrecip6, chartPrecip12, chartPrecip18, chartPrecip23],\n              yAxisID: 'rain',\n              label: \"Précipitation\",\n              borderColor: \"#030340\",\n              fill: true\n            }\n          ]\n        },\n        options: {\n            legend:{\n                display: false\n            },\n            title: {\n                display: false,\n                text: 'World population per region (in millions)'\n            },\n            scales: {\n                yAxes: [{\n                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                    display: true,\n                    position: 'left',\n                    id: 'temperature',\n                }, {\n                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                    display: true,\n                    position: 'right',\n                    id: 'rain',\n                    ticks: {\n                        min: 0,\n                        max: 100\n                    },\n    \n                    // grid line settings\n                    gridLines: {\n                        drawOnChartArea: false, // only want the grid lines for one axis to show up\n                    },\n                }],\n            }\n        }\n      });\n      \n\n\n    let phase = (Math.round(retourReponse.daily.data[0].moonPhase * 8) / 8);\n    let moon = \"\";\n\n    switch (phase) {\n        case 0:\n        case 1:\n            moon = \"Nouvelle lune\";\n            break;\n        case 0.125: \n        case 0.875:\n            moon = \"Croissant de lune\";                            \n            break;\n        case 0.25:\n        case 0.375:\n        case 0.625: \n        case 0.75:\n            moon = \"Demi lune\";                                                        \n            break;\n        case 0.5:\n            moon = \"Pleine lune\";                                               \n            break;\n    }\n\n\n    let currentDate = new Date(retourReponse.currently.time * 1000);\n\n    let set = new Date(retourReponse.daily.data[0].sunsetTime * 1000);\n    let rise = new Date(retourReponse.daily.data[0].sunriseTime * 1000);\n    let riseHour, riseMinute, setHour, setMinute;\n\n    rise.getHours() < 10 ? riseHour = \"0\" + rise.getHours() : riseHour = rise.getHours();\n    rise.getMinutes() < 10 ? riseMinute = \"0\" + rise.getMinutes() : riseMinute = rise.getMinutes();\n\n    set.getHours() < 10 ? setHour = \"0\" + set.getHours() : setHour = set.getHours();\n    set.getMinutes() < 10 ? setMinute = \"0\" + set.getMinutes() : setMinute = set.getMinutes();\n    \n    weatherDay.innerHTML = day[currentDate.getDay()];\n    weatherDate.innerHTML = currentDate.getDate() + \" \" + month[currentDate.getMonth()] + \" \" + currentDate.getFullYear();\n    message.innerHTML = retourReponse.currently.summary;\n    temperature.innerHTML = Math.round(retourReponse.currently.temperature) + \"°C\";\n    weatherImg.src = \"../Assets/img/weather-icons/\" + retourReponse.currently.icon + \".svg\";\n    pluie.innerHTML = Math.round(retourReponse.currently.precipProbability * 100) + \"%\";\n    weatherData[0].innerHTML = Math.round(retourReponse.currently.pressure) + \" hpa\";\n    weatherData[1].innerHTML = Math.round(retourReponse.currently.windSpeed) + \" m/s\";\n    weatherData[2].innerHTML = Math.round(retourReponse.currently.humidity) + \"%\";\n    weatherData[3].innerHTML = Math.round(retourReponse.currently.precipProbability * 100) + \"%\";\n    weatherData[4].innerHTML = Math.round(retourReponse.currently.temperature) + \"°C\";\n    weatherData[5].innerHTML = Math.round(retourReponse.currently.uvIndex);\n    weatherData[6].innerHTML = Math.round(retourReponse.currently.visibility) + \" km\";\n    weatherData[7].innerHTML = riseHour + \":\" + riseMinute;\n    weatherData[8].innerHTML = setHour + \":\" + setMinute;\n    weatherData[9].innerHTML = moon;\n    setTime.value = currentDate.getHours();\n    weatherHeure.innerHTML = currentDate.getHours() + \":00\";\n    compass.style.transform = \"rotate(\" + retourReponse.currently.windBearing + \"deg\";\n}\n\nfunction displayHourly() {\n    message.innerHTML = result.hourly.data[setTime.value].summary;\n    temperature.innerHTML = Math.round(result.hourly.data[setTime.value].temperature) + \"°C\";\n    weatherImg.src = \"../Assets/img/weather-icons/\" + result.hourly.data[setTime.value].icon + \".svg\";\n    pluie.innerHTML = Math.round(result.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n    weatherData[0].innerHTML = Math.round(result.hourly.data[setTime.value].pressure) + \" hpa\";\n    weatherData[1].innerHTML = Math.round(result.hourly.data[setTime.value].windSpeed) + \" m/s\";\n    weatherData[2].innerHTML = Math.round(result.hourly.data[setTime.value].humidity) + \"%\";\n    weatherData[3].innerHTML = Math.round(result.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n    weatherData[4].innerHTML = Math.round(result.hourly.data[setTime.value].temperature) + \"°C\";\n    weatherData[5].innerHTML = Math.round(result.hourly.data[setTime.value].uvIndex);\n    weatherData[6].innerHTML = Math.round(result.hourly.data[setTime.value].visibility) + \" km\";\n    weatherHeure.innerHTML = setTime.value + \":00\";\n    compass.style.transform = \"rotate(\" + result.hourly.data[setTime.value].windBearing + \"deg\";\n\n    \n}\n\n\n\nfunction getPreviousDay() {\n\n        console.log(\"je fais un previous\");\n        let data = new FormData();\n        time -= 86400;\n\n\n        time === base ? precedent.style.display = \"none\" : precedent.style.display = \"block\";\n        time === limit ? suivant.style.display = \"none\" : suivant.style.display = \"block\";\n\n        if(time === base) {\n            precedent.style.display = \"none\";\n        } else {\n            precedent.style.display = \"block\";\n        }\n\n\n        data.append(\"latitude\", latitude);\n        data.append(\"longitude\", longitude);\n        data.append(\"time\", time);\n\n        fetch(\"/weather/get\", {method: \"POST\", body: data})\n        .then((retourReponse) => {\n            return retourReponse.json();\n        })\n        .then((retourReponse) => {\n\n            result = retourReponse;\n\n            // console.log(retourReponse);\n\n            displayData(retourReponse);\n\n            // setTime.addEventListener(\"change\", () => {\n            \n            //     displayHourly(retourReponse);\n                \n\n            // })\n\n\n\n        }).catch((error) => {\n            console.log(error);\n        });\n}\n\nfunction getNextDay() {\n\n\n        console.log(\"je fais un next\");\n        let data = new FormData();\n        time += 86400;\n\n\n        if(time === limit) {\n            suivant.style.display = \"none\";\n        } else {\n            suivant.style.display = \"block\";\n        }\n\n        time === base ? precedent.style.display = \"none\" : precedent.style.display = \"block\";\n        time === limit ? suivant.style.display = \"none\" : suivant.style.display = \"block\";\n\n        data.append(\"latitude\", latitude);\n        data.append(\"longitude\", longitude);\n        data.append(\"time\", time);\n\n        fetch(\"/weather/get\", {method: \"POST\", body: data})\n        .then((retourReponse) => {\n            return retourReponse.json();\n        })\n        .then((retourReponse) => {\n\n            result = retourReponse;\n\n            displayData(retourReponse);\n\n            // setTime.addEventListener(\"change\", () => {\n            \n            //     displayHourly(retourReponse);\n                \n\n            // })\n\n\n\n        }).catch((error) => {\n            console.log(error);\n        });\n}\n\n\n\nfunction getInitialData() {\n\n    let data = new FormData();\n\n    data.append(\"latitude\", latitude);\n    data.append(\"longitude\", longitude);\n\n    // const res = await fetch('/weather/get', {method: \"POST\", body: data});\n    // const retourReponse = await res.json();\n\n    fetch(\"/weather/get\", {method: \"POST\", body: data})\n    .then((retourReponse) => {\n        return retourReponse.json();\n    })\n    .then((retourReponse) => {\n\n        result = retourReponse;\n\n        displayData(retourReponse);\n\n        suivant.addEventListener('click', () => {\n            getNextDay();\n        });\n    \n        precedent.addEventListener('click', () => {\n            getPreviousDay();\n        });\n    \n        \n        setTime.addEventListener(\"change\", () => {\n                            \n            displayHourly();\n    \n        })\n\n\n    }).catch((error) => {\n        console.log(error);\n    });\n\n\n}\n\n\nconst connexionLogin = document.querySelector(\"#connexion_login\");\nconst loginLogin = document.querySelector(\"#login_login\");\nconst passLogin = document.querySelector(\"#pass_login\");\n\nfunction verify(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n           \n            let data = new FormData();\n            data.append(\"login\", loginLogin.value);\n            data.append(\"pass\", passLogin.value);\n        \n            fetch(\"/login/verif\", {method: \"POST\", body: data})\n            .then( (result) => { return result.json() } )\n            .then( (result) => {\n                // console.log(result.error);\n                if(!result.error){\n                    console.log(result);\n                    window.location.replace(\"/user\");\n                } else {\n                    document.querySelector(\"#error\").innerHTML = result.error;\n                }\n            });\n        }\n    })\n}\n\nverify(connexionlogin, \"click\");\nverify(loginlogin, \"keydown\");\nverify(passlogin, \"keydown\");\nconst genre_male = document.querySelector(\"#maleButton\");\nconst genre_female = document.querySelector(\"#femaleButton\");\n\nconst avatar_m1 = document.querySelector(\"#avatar_m1\");\nconst avatar_m2 = document.querySelector(\"#avatar_m2\");\nconst avatar_m3 = document.querySelector(\"#avatar_m3\");\nconst avatar_m4 = document.querySelector(\"#avatar_m4\");\nconst avatar_f1 = document.querySelector(\"#avatar_f1\");\nconst avatar_f2 = document.querySelector(\"#avatar_f2\");\nconst avatar_f3 = document.querySelector(\"#avatar_f3\");\nconst avatar_f4 = document.querySelector(\"#avatar_f4\");\n\nconst array_avatar = document.querySelectorAll(\".img-avatar\");\nconst array_skin = document.querySelectorAll(\".my-2\");\n\nconst skin1 = document.querySelector(\"#skin1\");\nconst skin2 = document.querySelector(\"#skin2\");\nconst skin3 = document.querySelector(\"#skin3\");\nconst skin4 = document.querySelector(\"#skin4\");\n\navatar_m1.classList.remove(\"invisible\");\ngenre_male.classList.add(\"genre\");\ngenre_female.classList.remove(\"genre\");\nfor (let i = 1; i < array_avatar.length; i++) {\n    array_avatar[i].classList.add(\"invisible\");\n}\n\nfor (let j = 0; j < array_skin.length; j++) {\n    array_skin[j].addEventListener(\"click\", (e) => {\n        for (let i = 0; i < array_avatar.length; i++) {\n            array_avatar[i].classList.add(\"invisible\");\n        }\n        array_avatar[j].classList.remove(\"invisible\");\n    })\n}\n\ngenre_male.addEventListener(\"click\", (e) => {\n    avatar_m1.classList.remove(\"invisible\");\n    genre_male.classList.add(\"genre\");\n    genre_female.classList.remove(\"genre\");\n    for (let i = 1; i < array_avatar.length; i++) {\n        array_avatar[i].classList.add(\"invisible\");\n    }\n\n    for (let j = 0; j < array_skin.length; j++) {\n        array_skin[j].addEventListener(\"click\", (e) => {\n            for (let i = 0; i < array_avatar.length; i++) {\n                array_avatar[i].classList.add(\"invisible\");\n            }\n            array_avatar[j].classList.remove(\"invisible\");\n        })\n    }\n})\n\ngenre_female.addEventListener(\"click\", (e) => {\n    \n    for (let i = 0; i < array_avatar.length; i++) {\n        array_avatar[i].classList.add(\"invisible\");\n    }\n    avatar_f1.classList.remove(\"invisible\");\n\n    genre_female.classList.add(\"genre\");\n    genre_male.classList.remove(\"genre\");\n    for (let j = 0; j < array_skin.length; j++) {\n        array_skin[j].addEventListener(\"click\", (e) => {\n            for (let i = 0; i < array_avatar.length; i++) {\n                array_avatar[i].classList.add(\"invisible\");\n            }\n            array_avatar[j+4].classList.remove(\"invisible\");\n        })\n    }\n})\nnew Chart(document.getElementById(\"summaryChart\"), {\n    type: 'line',\n    data: {\n      labels: ['00:00', '06:00', '12:00', '18:00', '23:00'],\n      datasets: [{ \n          data: [1, 3, 8, 5, 2],\n          yAxisID: 'temperature',\n          label: \"Température\",\n          borderColor: \"#980000\",\n          fill: true\n        }, { \n          data: [0, 2, 5, 10, 3],\n          yAxisID: 'rain',\n          label: \"Précipitation\",\n          borderColor: \"#030340\",\n          fill: true\n        }\n      ]\n    },\n    options: {\n        legend:{\n            display: false\n        },\n        title: {\n            display: false,\n            text: 'World population per region (in millions)'\n        },\n        scales: {\n            yAxes: [{\n                type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                display: true,\n                position: 'left',\n                id: 'temperature',\n            }, {\n                type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                display: true,\n                position: 'right',\n                id: 'rain',\n                ticks: {\n                    min: 0,\n                    max: 100\n                },\n\n                // grid line settings\n                gridLines: {\n                    drawOnChartArea: false, // only want the grid lines for one axis to show up\n                },\n            }],\n        }\n    }\n  });\n  \n// $('.message a').click(function(){\n//     $('form').animate({height: \"toggle\", opacity: \"toggle\"}, \"slow\");\n//  });\n\nconst validerRegister = document.querySelector(\"#valider-register\");\nconst mailRegister = document.querySelector(\"#mail-register\");\nconst passRegister = document.querySelector(\"#pass-register\");\nconst prenomRegister = document.querySelector(\"#prenom-register\");\nconst sexeRegister = document.querySelector(\"#sexe-register\");\nconst adresseRegister = document.querySelector(\"#adresse-register\");\nconst villeRegister = document.querySelector(\"#ville-register\");\nconst colorRegister = document.querySelector(\"#color-register\");\n\n\n\ndocument.onreadystatechange = function () {\n    if (document.readyState === \"complete\") {\n        if (navigator.geolocation) { /*demander l'autorisation d'obtenir la géolocalisation*/\n            navigator.geolocation.getCurrentPosition(function (position) {\n\n                let latitude = position.coords.latitude;\n                let longitude = position.coords.longitude;\n                let link = \"https://nominatim.openstreetmap.org/reverse?format=json&lat=\" + latitude + \"&lon=\" + longitude;\n\n                fetch(link, {method: \"POST\"})\n                .then( (result) => { return result.json() } )\n                .then( (result) => {\n                // console.log(result);\n\n                let ville = typeof result.address.city !== 'undefined' ? result.address.city:result.address.town; \n                let route = result.address.road;\n                \n                adresseRegister.value = route;\n                villeRegister.value = ville;\n\n                });\n\n            })\n        }\n    }\n}\n\n\n\n\n\ncolorRegister.addEventListener('click', () => {\n    colorRegister.style.backgroundColor = colorRegister.value; \n})\n\nfunction verifyRegister(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n            let data = new FormData();\n            data.append(\"mail\", mailRegister.value);\n            data.append(\"pass\", passRegister.value);\n            data.append(\"prenom\", prenomRegister.value);\n            data.append(\"sexe\", sexeRegister.value);\n            data.append(\"color\", colorRegister.value);\n            data.append(\"adresse\", adresseRegister.value);\n            data.append(\"ville\", villeRegister.value);\n        \n            fetch(\"/register/verif\", {method: \"POST\", body: data})\n            .then( (result) => { return result.json() } )\n            .then( (result) => {\n                console.log(result);\n\n\n                if(!result.message){\n                    document.querySelector(\".message\").innerHTML = \"Inscription réussie, vous allez être redirigé.\";\n                    // setTimeout(function(){\n                    //     window.location.replace(\"/weather\");\n                    // }, 3000);\n                } else {\n                    document.querySelector(\".message\").innerHTML = \"\";\n                    for (let i = 0; i < result.message.length; i++) {\n                        document.querySelector(\".message\").innerHTML += result.message[i] + '</br>';\n                    }\n                }\n                }\n            );\n        }\n    })\n}\n\nverifyRegister(validerRegister, \"click\");\nverifyRegister(mailRegister, \"keydown\");\nverifyRegister(passRegister, \"keydown\");\nverifyRegister(prenomRegister, \"keydown\");\nverifyRegister(adresseRegister, \"keydown\");\nverifyRegister(villeRegister, \"keydown\");"]}