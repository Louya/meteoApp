{"version":3,"sources":["app.js"],"names":["location_input","document","querySelector","submit","verify","element","event","addEventListener","e","key","url","value","fetch","method","then","result","json","error","innerHTML","longitude","lon","latitude","lat","data","FormData","append","body","results","console","log","chartTemp0","Math","round","hourly","temperature","chartTemp6","chartTemp12","chartTemp18","chartTemp23","chartPrecip0","precipProbability","chartPrecip6","chartPrecip12","chartPrecip18","chartPrecip23","Chart","getElementById","type","labels","datasets","yAxisID","label","borderColor","fill","options","legend","display","title","text","scales","yAxes","position","id","ticks","min","max","gridLines","drawOnChartArea","moon","daily","moonPhase","riseHour","riseMinute","setHour","setMinute","currentDate","Date","currently","time","set","sunsetTime","rise","sunriseTime","clothes","temp","rain","i","array_clothes","length","classList","add","set_clothes3","remove","set_clothes4","set_clothes1","set_clothes2","getHours","getMinutes","weatherDay","day","getDay","weatherDate","getDate","month","getMonth","getFullYear","message","summary","pluie","weatherData","pressure","windSpeed","humidity","uvIndex","visibility","setTime","weatherHeure","compass","style","transform","windBearing","querySelectorAll","weatherImg","precedent","suivant","search","getTime","limit","base","onreadystatechange","readyState","navigator","geolocation","getCurrentPosition","coords","displayData","retourReponse","src","icon","genre_female","displayHourly","catch","city","address","town","connexionLogin","loginLogin","passLogin","window","location","replace","connexionlogin","loginlogin","passlogin","genre_male","avatar_m1","avatar_m2","avatar_m3","avatar_m4","avatar_f1","avatar_f2","avatar_f3","avatar_f4","array_avatar","array_skin","skin1","skin2","skin3","skin4","j","validerRegister","mailRegister","passRegister","prenomRegister","sexeRegister","adresseRegister","villeRegister","colorRegister","verifyRegister","ville","route","road","backgroundColor"],"mappings":"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","file":"app.js","sourcesContent":["const location_input = document.querySelector(\"#location-input\");\nconst submit = document.querySelector(\"#adress\");\n\n\nfunction verify(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n           \n        \n            let city = location_input.value;\n            let url = `https://nominatim.openstreetmap.org/search?format=json&city=${city}`;\n\n            fetch(url, {method: \"POST\"})\n            .then( (result) => { return result.json() })\n            .then( (result) => {\n                if(!result.error){\n    \n                    let longitude = result[0].lon;\n                    let latitude = result[0].lat;\n\n                    let data = new FormData();\n                    \n                    data.append(\"latitude\", latitude);\n                    data.append(\"longitude\", longitude);\n\n                    fetch(\"/weather/get\", {method: \"POST\", body: data})\n                    .then( (results) => { return results.json() })\n                    .then( (results) => {\n                        if(!results.error){\n                            console.log(results);\n                            let chartTemp0 = Math.round(results.hourly.data[0].temperature);\n                            let chartTemp6 = Math.round(results.hourly.data[6].temperature);\n                            let chartTemp12 = Math.round(results.hourly.data[12].temperature);\n                            let chartTemp18 = Math.round(results.hourly.data[18].temperature);\n                            let chartTemp23 = Math.round(results.hourly.data[23].temperature);\n        \n                            let chartPrecip0 = Math.round(results.hourly.data[0].precipProbability);\n                            let chartPrecip6 = Math.round(results.hourly.data[6].precipProbability);\n                            let chartPrecip12 = Math.round(results.hourly.data[12].precipProbability);\n                            let chartPrecip18 = Math.round(results.hourly.data[18].precipProbability);\n                            let chartPrecip23 = Math.round(results.hourly.data[23].precipProbability);\n        \n                            console.log(chartTemp23);\n        \n                            new Chart(document.getElementById(\"summaryChart\"), {\n                                type: 'line',\n                                data: {\n                                  labels: ['00:00', '06:00', '12:00', '18:00', '23:00'],\n                                  datasets: [{ \n                                      data: [chartTemp0, chartTemp6, chartTemp12, chartTemp18, chartTemp23],\n                                      yAxisID: 'temperature',\n                                      label: \"Température\",\n                                      borderColor: \"#980000\",\n                                      fill: true\n                                    }, { \n                                      data: [chartPrecip0, chartPrecip6, chartPrecip12, chartPrecip18, chartPrecip23],\n                                      yAxisID: 'rain',\n                                      label: \"Précipitation\",\n                                      borderColor: \"#030340\",\n                                      fill: true\n                                    }\n                                  ]\n                                },\n                                options: {\n                                    legend:{\n                                        display: false\n                                    },\n                                    title: {\n                                        display: false,\n                                        text: 'World population per region (in millions)'\n                                    },\n                                    scales: {\n                                        yAxes: [{\n                                            type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                                            display: true,\n                                            position: 'left',\n                                            id: 'temperature',\n                                        }, {\n                                            type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                                            display: true,\n                                            position: 'right',\n                                            id: 'rain',\n                                            ticks: {\n                                                min: 0,\n                                                max: 100\n                                            },\n                            \n                                            // grid line settings\n                                            gridLines: {\n                                                drawOnChartArea: false, // only want the grid lines for one axis to show up\n                                            },\n                                        }],\n                                    }\n                                }\n                              });\n        \n                            let phase = (Math.round(results.daily.data[0].moonPhase * 8) / 8);\n                            let moon = \"\";\n        \n                            switch (phase) {\n                                case 0 || 1:\n                                    moon = \"Nouvelle lune\";\n                                    break;\n                                case 0.125 || 0.775:\n                                    moon = \"Croissant de lune\";                            \n                                    break;\n                                case 0.25 || 0.75:\n                                    moon = \"Demi lune\";                                                        \n                                    break;\n                                case 0.5:\n                                    moon = \"Pleine lune\";                                                        \n                                    break;\n                            }\n        \n        \n                            let currentDate = new Date(results.currently.time * 1000);\n        \n                            let set = new Date(results.daily.data[0].sunsetTime * 1000);\n                            let rise = new Date(results.daily.data[0].sunriseTime * 1000);\n                            let riseHour, riseMinute, setHour, setMinute;\n        \n                            rise.getHours() < 10 ? riseHour = \"0\" + rise.getHours() : riseHour = rise.getHours();\n                            rise.getMinutes() < 10 ? riseMinute = \"0\" + rise.getMinutes() : riseMinute = rise.getMinutes();\n        \n                            set.getHours() < 10 ? setHour = \"0\" + set.getHours() : setHour = set.getHours();\n                            set.getMinutes() < 10 ? setMinute = \"0\" + set.getMinutes() : setMinute = set.getMinutes();\n                            \n                            weatherDay.innerHTML = day[currentDate.getDay()];\n                            weatherDate.innerHTML = currentDate.getDate() + \" \" + month[currentDate.getMonth()] + \" \" + currentDate.getFullYear();\n                            message.innerHTML = results.currently.summary;\n                            temperature.innerHTML = Math.round(results.currently.temperature) + \"°C\";\n                            pluie.innerHTML = Math.round(results.currently.precipProbability * 100) + \"%\";\n                            weatherData[0].innerHTML = Math.round(results.currently.pressure) + \" hpa\";\n                            weatherData[1].innerHTML = Math.round(results.currently.windSpeed) + \" m/s\";\n                            weatherData[2].innerHTML = Math.round(results.currently.humidity) + \"%\";\n                            weatherData[3].innerHTML = Math.round(results.currently.precipProbability * 100) + \"%\";\n                            weatherData[4].innerHTML = Math.round(results.currently.temperature) + \"°C\";\n                            weatherData[5].innerHTML = Math.round(results.currently.uvIndex);\n                            weatherData[6].innerHTML = Math.round(results.currently.visibility) + \" km\";\n                            weatherData[7].innerHTML = riseHour + \":\" + riseMinute;\n                            weatherData[8].innerHTML = setHour + \":\" + setMinute;\n                            weatherData[9].innerHTML = moon;\n                            setTime.value = currentDate.getHours();\n                            weatherHeure.innerHTML = currentDate.getHours() + \":00\";\n                            compass.style.transform = \"rotate(\" + results.currently.windBearing + \"deg\";\n        \n                            let temp = Math.round(results.hourly.data[setTime.value].temperature);\n                            let rain = results.hourly.data[setTime.value].precipProbability;\n                                                        \n                            // Changement vêtements\n                            function clothes(temp, rain){\n                                                            \n                                if(temp < 15 && rain < 0.2){\n                                    for (let i = 0; i < array_clothes.length; i++) {\n                                        array_clothes[i].classList.add(\"invisible\");\n                                    }\n                                    set_clothes3.classList.remove(\"invisible\");\n\n                                }else if(temp < 15 && rain > 0.2){\n                                    for (let i = 0; i < array_clothes.length; i++) {\n                                        array_clothes[i].classList.add(\"invisible\");\n                                    }\n                                    set_clothes4.classList.remove(\"invisible\");\n\n                                }else if(temp >= 15 && rain < 0.2){\n                                    for (let i = 0; i < array_clothes.length; i++) {\n                                        array_clothes[i].classList.add(\"invisible\");\n                                    }\n                                    set_clothes1.classList.remove(\"invisible\");\n\n                                }else if(temp >= 15 && rain > 0.2){\n                                    for (let i = 0; i < array_clothes.length; i++) {\n                                        array_clothes[i].classList.add(\"invisible\");\n                                    }\n                                    set_clothes2.classList.remove(\"invisible\");\n                                }\n                            }\n                            clothes(temp, rain);\n\n                            setTime.addEventListener(\"change\", () => {\n                                \n                                message.innerHTML = results.hourly.data[setTime.value].summary;\n                                temperature.innerHTML = Math.round(results.hourly.data[setTime.value].temperature) + \"°C\";\n                                pluie.innerHTML = Math.round(results.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n                                weatherData[0].innerHTML = Math.round(results.hourly.data[setTime.value].pressure) + \" hpa\";\n                                weatherData[1].innerHTML = Math.round(results.hourly.data[setTime.value].windSpeed) + \" m/s\";\n                                weatherData[2].innerHTML = Math.round(results.hourly.data[setTime.value].humidity) + \"%\";\n                                weatherData[3].innerHTML = Math.round(results.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n                                weatherData[4].innerHTML = Math.round(results.hourly.data[setTime.value].temperature) + \"°C\";\n                                weatherData[5].innerHTML = Math.round(results.hourly.data[setTime.value].uvIndex);\n                                weatherData[6].innerHTML = Math.round(results.hourly.data[setTime.value].visibility) + \" km\";\n                                weatherHeure.innerHTML = setTime.value + \":00\";\n                                compass.style.transform = \"rotate(\" + results.hourly.data[setTime.value].windBearing + \"deg\";\n        \n                                let temp = Math.round(results.hourly.data[setTime.value].temperature);\n                                let rain = results.hourly.data[setTime.value].precipProbability;\n                                clothes(temp, rain);\n                                console.log(rain);\n                            })\n\n                        } else {\n                            document.querySelector(\"#error\").innerHTML = results.error;\n                        }\n                    });\n                    \n                } else {\n                    document.querySelector(\"#error\").innerHTML = result.error;\n                }\n            });\n\n        }\n    })\n}\n\nverify(submit, \"click\");\nverify(location_input, \"keydown\");\nconst message = document.querySelector(\"#message\");\nconst temperature = document.querySelector(\"#tempData\");\nconst pluie = document.querySelector(\"#tempRain\");\nconst weatherData = document.querySelectorAll(\".data\");\nconst weatherDate = document.querySelector(\"#weather-date\");\nconst setTime = document.querySelector(\"#setTime\");\nconst weatherHeure = document.querySelector(\"#weather-heure\");\nconst weatherDay = document.querySelector(\"#weather-day\");\nconst weatherImg = document.querySelector(\"#weather-img\");\nconst compass = document.querySelector(\"#compass\");\nconst precedent = document.querySelector(\"#precedent\");\nconst suivant = document.querySelector(\"#suivant\");\nconst search = document.querySelector(\"#search\");\nconst month = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\nconst day = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\n\nconst set_clothes1 = document.querySelector(\"#m_set1\");\nconst set_clothes2 = document.querySelector(\"#m_set2\");\nconst set_clothes3 = document.querySelector(\"#m_set3\");\nconst set_clothes4 = document.querySelector(\"#m_set4\");\nconst array_clothes = document.querySelectorAll(\".img-clothes\");\n\nlet time = new Date();\ntime = time.getTime();\ntime = Math.round(time/1000);\nlet limit = time + (86400*6);\nlet base = time;\n\n\n\ndocument.onreadystatechange = function () {\n    console.log(\"onreadystatechange marche\");\n    if (document.readyState === \"complete\") {\n        console.log(\"if complete marche\");\n        if (navigator.geolocation) { /*demander l'autorisation d'obtenir la géolocalisation*/\n        navigator.geolocation.getCurrentPosition(function (position) {\n\n            let latitude = position.coords.latitude;\n            let longitude = position.coords.longitude;\n\n            let data = new FormData();\n\n            data.append(\"latitude\", latitude);\n            data.append(\"longitude\", longitude);\n\n            console.log(\"if geolocalisation marche\");\n            fetch(\"/weather/get\", {method: \"POST\", body: data})\n                .then((retourReponse) => {\n                    return retourReponse.json();\n                })\n                .then((retourReponse) => {\n\n                    displayData(retourReponse);\n\n                                    \n                    setTime.addEventListener(\"change\", () => {\n                        \n                        displayHourly(retourReponse);\n\n                    })\n\n                }).catch((error) => {\n                    console.log(error);\n                });\n\n\n\n                precedent.addEventListener('click', () => {\n\n\n                    let data = new FormData();\n                    let latitude = position.coords.latitude;\n                    let longitude = position.coords.longitude;\n                    time -= 86400;\n\n                    console.log(time);\n                    console.log(base);\n\n\n                    time === base ? precedent.style.display = \"none\" : precedent.style.display = \"block\";\n                    time === limit ? suivant.style.display = \"none\" : suivant.style.display = \"block\";\n\n                    if(time === base) {\n                        precedent.style.display = \"none\";\n                    } else {\n                        precedent.style.display = \"block\";\n                    }\n\n\n                    data.append(\"latitude\", latitude);\n                    data.append(\"longitude\", longitude);\n                    data.append(\"time\", time);\n\n                    fetch(\"/weather/get\", {method: \"POST\", body: data})\n                    .then((retourReponse) => {\n                        return retourReponse.json();\n                    })\n                    .then((retourReponse) => {\n\n                        // console.log(retourReponse);\n\n                        displayData(retourReponse);\n\n                        setTime.addEventListener(\"change\", () => {\n                        \n                            displayHourly(retourReponse);\n                            \n    \n                        })\n\n\n\n                    }).catch((error) => {\n                        console.log(error);\n                    });\n                    \n                })\n                suivant.addEventListener('click', () => {\n\n\n                    let data = new FormData();\n                    let latitude = position.coords.latitude;\n                    let longitude = position.coords.longitude;\n                    time += 86400;\n\n                    console.log(time);\n                    console.log(limit);\n\n                    if(time === limit) {\n                        suivant.style.display = \"none\";\n                    } else {\n                        suivant.style.display = \"block\";\n                    }\n\n                    time === base ? precedent.style.display = \"none\" : precedent.style.display = \"block\";\n                    time === limit ? suivant.style.display = \"none\" : suivant.style.display = \"block\";\n\n                    data.append(\"latitude\", latitude);\n                    data.append(\"longitude\", longitude);\n                    data.append(\"time\", time);\n\n                    fetch(\"/weather/get\", {method: \"POST\", body: data})\n                    .then((retourReponse) => {\n                        return retourReponse.json();\n                    })\n                    .then((retourReponse) => {\n\n                        // console.log(retourReponse);\n\n                        displayData(retourReponse);\n\n                        setTime.addEventListener(\"change\", () => {\n                        \n                            displayHourly(retourReponse);\n                            \n    \n                        })\n\n\n\n                    }).catch((error) => {\n                        console.log(error);\n                    });\n                    \n                })\n\n\n\n                function displayData(retourReponse) {\n                    let chartTemp0 = Math.round(retourReponse.hourly.data[0].temperature);\n                    let chartTemp6 = Math.round(retourReponse.hourly.data[6].temperature);\n                    let chartTemp12 = Math.round(retourReponse.hourly.data[12].temperature);\n                    let chartTemp18 = Math.round(retourReponse.hourly.data[18].temperature);\n                    let chartTemp23 = Math.round(retourReponse.hourly.data[23].temperature);\n\n                    let chartPrecip0 = Math.round(retourReponse.hourly.data[0].precipProbability * 100);\n                    let chartPrecip6 = Math.round(retourReponse.hourly.data[6].precipProbability * 100);\n                    let chartPrecip12 = Math.round(retourReponse.hourly.data[12].precipProbability * 100);\n                    let chartPrecip18 = Math.round(retourReponse.hourly.data[18].precipProbability * 100);\n                    let chartPrecip23 = Math.round(retourReponse.hourly.data[23].precipProbability * 100);\n\n                    new Chart(document.getElementById(\"summaryChart\"), {\n                        type: 'line',\n                        data: {\n                          labels: ['00:00', '06:00', '12:00', '18:00', '23:00'],\n                          datasets: [{ \n                              data: [chartTemp0, chartTemp6, chartTemp12, chartTemp18, chartTemp23],\n                              yAxisID: 'temperature',\n                              label: \"Température\",\n                              borderColor: \"#980000\",\n                              fill: true\n                            }, { \n                              data: [chartPrecip0, chartPrecip6, chartPrecip12, chartPrecip18, chartPrecip23],\n                              yAxisID: 'rain',\n                              label: \"Précipitation\",\n                              borderColor: \"#030340\",\n                              fill: true\n                            }\n                          ]\n                        },\n                        options: {\n                            legend:{\n                                display: false\n                            },\n                            title: {\n                                display: false,\n                                text: 'World population per region (in millions)'\n                            },\n                            scales: {\n                                yAxes: [{\n                                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                                    display: true,\n                                    position: 'left',\n                                    id: 'temperature',\n                                }, {\n                                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                                    display: true,\n                                    position: 'right',\n                                    id: 'rain',\n                                    ticks: {\n                                        min: 0,\n                                        max: 100\n                                    },\n                    \n                                    // grid line settings\n                                    gridLines: {\n                                        drawOnChartArea: false, // only want the grid lines for one axis to show up\n                                    },\n                                }],\n                            }\n                        }\n                      })  \n\n                    let phase = (Math.round(retourReponse.daily.data[0].moonPhase * 8) / 8);\n                    let moon = \"\";\n\n                    switch (phase) {\n                        case 0:\n                        case 1:\n                            moon = \"Nouvelle lune\";\n                            break;\n                        case 0.125: \n                        case 0.875:\n                            moon = \"Croissant de lune\";                            \n                            break;\n                        case 0.25:\n                        case 0.375:\n                        case 0.625: \n                        case 0.75:\n                            moon = \"Demi lune\";                                                        \n                            break;\n                        case 0.5:\n                            moon = \"Pleine lune\";                                               \n                            break;\n                    }\n\n                    let currentDate = new Date(retourReponse.currently.time * 1000);\n\n                    let set = new Date(retourReponse.daily.data[0].sunsetTime * 1000);\n                    let rise = new Date(retourReponse.daily.data[0].sunriseTime * 1000);\n                    let riseHour, riseMinute, setHour, setMinute;\n\n                    rise.getHours() < 10 ? riseHour = \"0\" + rise.getHours() : riseHour = rise.getHours();\n                    rise.getMinutes() < 10 ? riseMinute = \"0\" + rise.getMinutes() : riseMinute = rise.getMinutes();\n\n                    set.getHours() < 10 ? setHour = \"0\" + set.getHours() : setHour = set.getHours();\n                    set.getMinutes() < 10 ? setMinute = \"0\" + set.getMinutes() : setMinute = set.getMinutes();\n                    \n                    weatherDay.innerHTML = day[currentDate.getDay()];\n                    weatherDate.innerHTML = currentDate.getDate() + \" \" + month[currentDate.getMonth()] + \" \" + currentDate.getFullYear();\n                    message.innerHTML = retourReponse.currently.summary;\n                    temperature.innerHTML = Math.round(retourReponse.currently.temperature) + \"°C\";\n                    weatherImg.src = \"../Assets/img/weather-icons/\" + retourReponse.currently.icon + \".png\";\n                    pluie.innerHTML = Math.round(retourReponse.currently.precipProbability * 100) + \"%\";\n                    weatherData[0].innerHTML = Math.round(retourReponse.currently.pressure) + \" hpa\";\n                    weatherData[1].innerHTML = Math.round(retourReponse.currently.windSpeed) + \" m/s\";\n                    weatherData[2].innerHTML = Math.round(retourReponse.currently.humidity) + \"%\";\n                    weatherData[3].innerHTML = Math.round(retourReponse.currently.precipProbability * 100) + \"%\";\n                    weatherData[4].innerHTML = Math.round(retourReponse.currently.temperature) + \"°C\";\n                    weatherData[5].innerHTML = Math.round(retourReponse.currently.uvIndex);\n                    weatherData[6].innerHTML = Math.round(retourReponse.currently.visibility) + \" km\";\n                    weatherData[7].innerHTML = riseHour + \":\" + riseMinute;\n                    weatherData[8].innerHTML = setHour + \":\" + setMinute;\n                    weatherData[9].innerHTML = moon;\n                    setTime.value = currentDate.getHours();\n                    weatherHeure.innerHTML = currentDate.getHours() + \":00\";\n                    compass.style.transform = \"rotate(\" + retourReponse.currently.windBearing + \"deg\";\n                }\n\n                    let temp = Math.round(retourReponse.hourly.data[setTime.value].temperature);\n                    let rain = retourReponse.hourly.data[setTime.value].precipProbability;\n                                                        \n                    // Changement vêtements\n                    function clothes(temp, rain){\n\n                        if(temp < 15 && rain < 0.2){\n                            for (let i = 0; i < array_clothes.length; i++) {\n                                array_clothes[i].classList.add(\"invisible\");\n                            }\n                            set_clothes3.classList.remove(\"invisible\");\n    \n                        }else if(temp < 15 && rain > 0.2){\n                            for (let i = 0; i < array_clothes.length; i++) {\n                                array_clothes[i].classList.add(\"invisible\");\n                            }\n                            set_clothes4.classList.remove(\"invisible\");\n    \n                        }else if(temp >= 15 && rain < 0.2){\n                            for (let i = 0; i < array_clothes.length; i++) {\n                                array_clothes[i].classList.add(\"invisible\");\n                            }\n                            set_clothes1.classList.remove(\"invisible\");\n    \n                        }else if(temp >= 15 && rain > 0.2){\n                            for (let i = 0; i < array_clothes.length; i++) {\n                                array_clothes[i].classList.add(\"invisible\");\n                            }\n                            set_clothes2.classList.remove(\"invisible\");\n                        }\n\n                        genre_female.addEventListener(\"click\", (e) => {\n                            if(temp < 15 && rain < 0.2){\n                                for (let i = 0; i < array_clothes.length; i++) {\n                                    array_clothes[i].classList.add(\"invisible\");\n                                }\n                                set_clothes3.classList.remove(\"invisible\");\n        \n                            }else if(temp < 15 && rain > 0.2){\n                                for (let i = 0; i < array_clothes.length; i++) {\n                                    array_clothes[i].classList.add(\"invisible\");\n                                }\n                                set_clothes4.classList.remove(\"invisible\");\n        \n                            }else if(temp >= 15 && rain < 0.2){\n                                for (let i = 0; i < array_clothes.length; i++) {\n                                    array_clothes[i].classList.add(\"invisible\");\n                                }\n                                set_clothes1.classList.remove(\"invisible\");\n        \n                            }else if(temp >= 15 && rain > 0.2){\n                                for (let i = 0; i < array_clothes.length; i++) {\n                                    array_clothes[i].classList.add(\"invisible\");\n                                }\n                                set_clothes2.classList.remove(\"invisible\");\n                            }\n                            \n                        })\n                    }\n                                                    \n                    clothes(temp, rain);\n                    \n                    setTime.addEventListener(\"change\", () => {\n                        \n                        displayHourly(retourReponse);\n\n                         // Changement vêtements\n                        let temp = Math.round(retourReponse.hourly.data[setTime.value].temperature);\n                        let rain = retourReponse.hourly.data[setTime.value].precipProbability;\n                        clothes(temp, rain);\n                    }) \n                    \n                    let lat = retourReponse.latitude;\n                    let lon = retourReponse.longitude;\n                    let url = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${lon}`;\n \n                    fetch(url, {method: \"POST\"})\n                    .then( (result) => { return result.json() })\n                    .then( (result) => {\n                        if(!result.error){\n                            let city = typeof result.address.city !== 'undefined' ? result.address.city:result.address.town; \n                            document.querySelector(\"#location-input\").value = city;\n                        }\n                    })\n\n                function displayHourly(retourReponse) {\n                    message.innerHTML = retourReponse.hourly.data[setTime.value].summary;\n                    temperature.innerHTML = Math.round(retourReponse.hourly.data[setTime.value].temperature) + \"°C\";\n                    weatherImg.src = \"../Assets/img/weather-icons/\" + retourReponse.hourly.data[setTime.value].icon + \".png\";\n                    pluie.innerHTML = Math.round(retourReponse.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n                    weatherData[0].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].pressure) + \" hpa\";\n                    weatherData[1].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].windSpeed) + \" m/s\";\n                    weatherData[2].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].humidity) + \"%\";\n                    weatherData[3].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n                    weatherData[4].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].temperature) + \"°C\";\n                    weatherData[5].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].uvIndex);\n                    weatherData[6].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].visibility) + \" km\";\n                    weatherHeure.innerHTML = setTime.value + \":00\";\n                    compass.style.transform = \"rotate(\" + retourReponse.hourly.data[setTime.value].windBearing + \"deg\";\n                }\n\n            })\n        }\n    }\n}\nconst connexionLogin = document.querySelector(\"#connexion_login\");\nconst loginLogin = document.querySelector(\"#login_login\");\nconst passLogin = document.querySelector(\"#pass_login\");\n\nfunction verify(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n           \n            let data = new FormData();\n            data.append(\"login\", loginLogin.value);\n            data.append(\"pass\", passLogin.value);\n        \n            fetch(\"/login/verif\", {method: \"POST\", body: data})\n            .then( (result) => { return result.json() } )\n            .then( (result) => {\n                // console.log(result.error);\n                if(!result.error){\n                    console.log(result);\n                    window.location.replace(\"/user\");\n                } else {\n                    document.querySelector(\"#error\").innerHTML = result.error;\n                }\n            });\n        }\n    })\n}\n\nverify(connexionlogin, \"click\");\nverify(loginlogin, \"keydown\");\nverify(passlogin, \"keydown\");\nconst genre_male = document.querySelector(\"#maleButton\");\nconst genre_female = document.querySelector(\"#femaleButton\");\n\nconst avatar_m1 = document.querySelector(\"#avatar_m1\");\nconst avatar_m2 = document.querySelector(\"#avatar_m2\");\nconst avatar_m3 = document.querySelector(\"#avatar_m3\");\nconst avatar_m4 = document.querySelector(\"#avatar_m4\");\nconst avatar_f1 = document.querySelector(\"#avatar_f1\");\nconst avatar_f2 = document.querySelector(\"#avatar_f2\");\nconst avatar_f3 = document.querySelector(\"#avatar_f3\");\nconst avatar_f4 = document.querySelector(\"#avatar_f4\");\n\nconst array_avatar = document.querySelectorAll(\".img-avatar\");\nconst array_skin = document.querySelectorAll(\".my-2\");\n\nconst skin1 = document.querySelector(\"#skin1\");\nconst skin2 = document.querySelector(\"#skin2\");\nconst skin3 = document.querySelector(\"#skin3\");\nconst skin4 = document.querySelector(\"#skin4\");\n\navatar_m1.classList.remove(\"invisible\");\ngenre_male.classList.add(\"genre\");\ngenre_female.classList.remove(\"genre\");\nfor (let i = 1; i < array_avatar.length; i++) {\n    array_avatar[i].classList.add(\"invisible\");\n}\n\nfor (let j = 0; j < array_skin.length; j++) {\n    array_skin[j].addEventListener(\"click\", (e) => {\n        for (let i = 0; i < array_avatar.length; i++) {\n            array_avatar[i].classList.add(\"invisible\");\n        }\n        array_avatar[j].classList.remove(\"invisible\");\n    })\n}\n\ngenre_male.addEventListener(\"click\", (e) => {\n    avatar_m1.classList.remove(\"invisible\");\n    genre_male.classList.add(\"genre\");\n    genre_female.classList.remove(\"genre\");\n    for (let i = 1; i < array_avatar.length; i++) {\n        array_avatar[i].classList.add(\"invisible\");\n    }\n\n    for (let j = 0; j < array_skin.length; j++) {\n        array_skin[j].addEventListener(\"click\", (e) => {\n            for (let i = 0; i < array_avatar.length; i++) {\n                array_avatar[i].classList.add(\"invisible\");\n            }\n            array_avatar[j].classList.remove(\"invisible\");\n        })\n    }\n})\n\ngenre_female.addEventListener(\"click\", (e) => {\n    \n    for (let i = 0; i < array_avatar.length; i++) {\n        array_avatar[i].classList.add(\"invisible\");\n    }\n    avatar_f1.classList.remove(\"invisible\");\n\n    genre_female.classList.add(\"genre\");\n    genre_male.classList.remove(\"genre\");\n    for (let j = 0; j < array_skin.length; j++) {\n        array_skin[j].addEventListener(\"click\", (e) => {\n            for (let i = 0; i < array_avatar.length; i++) {\n                array_avatar[i].classList.add(\"invisible\");\n            }\n            array_avatar[j+4].classList.remove(\"invisible\");\n        })\n    }\n})\nnew Chart(document.getElementById(\"summaryChart\"), {\n    type: 'line',\n    data: {\n      labels: ['00:00', '06:00', '12:00', '18:00', '23:00'],\n      datasets: [{ \n          data: [1, 3, 8, 5, 2],\n          yAxisID: 'temperature',\n          label: \"Température\",\n          borderColor: \"#980000\",\n          fill: true\n        }, { \n          data: [0, 2, 5, 10, 3],\n          yAxisID: 'rain',\n          label: \"Précipitation\",\n          borderColor: \"#030340\",\n          fill: true\n        }\n      ]\n    },\n    options: {\n        legend:{\n            display: false\n        },\n        title: {\n            display: false,\n            text: 'World population per region (in millions)'\n        },\n        scales: {\n            yAxes: [{\n                type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                display: true,\n                position: 'left',\n                id: 'temperature',\n            }, {\n                type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                display: true,\n                position: 'right',\n                id: 'rain',\n                ticks: {\n                    min: 0,\n                    max: 100\n                },\n\n                // grid line settings\n                gridLines: {\n                    drawOnChartArea: false, // only want the grid lines for one axis to show up\n                },\n            }],\n        }\n    }\n  });\n  \n// $('.message a').click(function(){\n//     $('form').animate({height: \"toggle\", opacity: \"toggle\"}, \"slow\");\n//  });\n\nconst validerRegister = document.querySelector(\"#valider-register\");\nconst mailRegister = document.querySelector(\"#mail-register\");\nconst passRegister = document.querySelector(\"#pass-register\");\nconst prenomRegister = document.querySelector(\"#prenom-register\");\nconst sexeRegister = document.querySelector(\"#sexe-register\");\nconst adresseRegister = document.querySelector(\"#adresse-register\");\nconst villeRegister = document.querySelector(\"#ville-register\");\nconst colorRegister = document.querySelector(\"#color-register\");\n\n\n\ndocument.onreadystatechange = function () {\n    if (document.readyState === \"complete\") {\n        if (navigator.geolocation) { /*demander l'autorisation d'obtenir la géolocalisation*/\n            navigator.geolocation.getCurrentPosition(function (position) {\n\n                let latitude = position.coords.latitude;\n                let longitude = position.coords.longitude;\n                let link = \"https://nominatim.openstreetmap.org/reverse?format=json&lat=\" + latitude + \"&lon=\" + longitude;\n\n                fetch(link, {method: \"POST\"})\n                .then( (result) => { return result.json() } )\n                .then( (result) => {\n                // console.log(result);\n\n                let ville = typeof result.address.city !== 'undefined' ? result.address.city:result.address.town; \n                let route = result.address.road;\n                \n                adresseRegister.value = route;\n                villeRegister.value = ville;\n\n                });\n\n            })\n        }\n    }\n}\n\n\n\n\n\ncolorRegister.addEventListener('click', () => {\n    colorRegister.style.backgroundColor = colorRegister.value; \n})\n\nfunction verifyRegister(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n            let data = new FormData();\n            data.append(\"mail\", mailRegister.value);\n            data.append(\"pass\", passRegister.value);\n            data.append(\"prenom\", prenomRegister.value);\n            data.append(\"sexe\", sexeRegister.value);\n            data.append(\"color\", colorRegister.value);\n            data.append(\"adresse\", adresseRegister.value);\n            data.append(\"ville\", villeRegister.value);\n        \n            fetch(\"/register/verif\", {method: \"POST\", body: data})\n            .then( (result) => { return result.json() } )\n            .then( (result) => {\n                console.log(result);\n                if(!result.message){\n                    document.querySelector(\".message\").innerHTML = \"Inscription réussie, vous allez être redirigé.\";\n                    // setTimeout(function(){\n                    //     window.location.replace(\"/weather\");\n                    // }, 3000);\n                } else {\n                    document.querySelector(\".message\").innerHTML = \"\";\n                    for (let i = 0; i < result.message.length; i++) {\n                        document.querySelector(\".message\").innerHTML += result.message[i] + '</br>';\n                    }\n                }\n                }\n            );\n        }\n    })\n}\n\nverifyRegister(validerRegister, \"click\");\nverifyRegister(mailRegister, \"keydown\");\nverifyRegister(passRegister, \"keydown\");\nverifyRegister(prenomRegister, \"keydown\");\nverifyRegister(adresseRegister, \"keydown\");\nverifyRegister(villeRegister, \"keydown\");\n"]}