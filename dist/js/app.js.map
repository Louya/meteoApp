{"version":3,"sources":["app.js"],"names":["location_input","document","querySelector","submit","verify","element","event","addEventListener","e","key","url","value","fetch","method","then","result","json","error","innerHTML","longitude","lon","latitude","lat","data","FormData","append","body","results","console","log","message","temperature","pluie","weatherData","querySelectorAll","weatherDate","setTime","weatherHeure","weatherDay","compass","month","day","onreadystatechange","readyState","navigator","geolocation","getCurrentPosition","position","coords","retourReponse","chartTemp0","Math","round","hourly","chartTemp6","chartTemp12","chartTemp18","chartTemp23","chartPrecip0","precipProbability","chartPrecip6","chartPrecip12","chartPrecip18","chartPrecip23","Chart","getElementById","type","labels","datasets","yAxisID","label","borderColor","fill","options","legend","display","title","text","scales","yAxes","id","ticks","min","max","gridLines","drawOnChartArea","moon","daily","moonPhase","riseHour","riseMinute","setHour","setMinute","currentDate","Date","currently","time","set","sunsetTime","rise","sunriseTime","getHours","getMinutes","getDay","getDate","getMonth","getFullYear","summary","pressure","windSpeed","humidity","uvIndex","visibility","style","transform","windBearing","catch","connexionLogin","loginLogin","passLogin","window","location","replace","connexionlogin","loginlogin","passlogin","avatarMale","avatarFemale","avatar_m1","avatar_m2","avatar_m3","avatar_m4","avatar_f1","avatar_f2","avatar_f3","avatar_f4","array_avatar","array_skin","skin1","skin2","skin3","skin4","genre_male","genre_female","classList","add","remove","j","length","i","validerRegister","mailRegister","passRegister","prenomRegister","sexeRegister","adresseRegister","villeRegister","colorRegister","verifyRegister","ville","address","city","town","route","road","backgroundColor"],"mappings":"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","file":"app.js","sourcesContent":["const location_input = document.querySelector(\"#location-input\");\nconst submit = document.querySelector(\"#adress\");\n\nfunction verify(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n           \n        \n            let city = location_input.value;\n            let url = `https://nominatim.openstreetmap.org/search?format=json&city=${city}`;\n\n            fetch(url, {method: \"POST\"})\n            .then( (result) => { return result.json() })\n            .then( (result) => {\n                if(!result.error){\n    \n                    let longitude = result[0].lon;\n                    let latitude = result[0].lat;\n\n                    let data = new FormData();\n                    \n                    data.append(\"latitude\", latitude);\n                    data.append(\"longitude\", longitude);\n\n                    fetch(\"/weather/get\", {method: \"POST\", body: data})\n                    .then( (results) => { return results.json() })\n                    .then( (results) => {\n                        if(!results.error){\n                            console.log(results);\n                        } else {\n                            document.querySelector(\"#error\").innerHTML = results.error;\n                        }\n                    });\n                    \n                } else {\n                    document.querySelector(\"#error\").innerHTML = result.error;\n                }\n            });\n\n        }\n    })\n}\n\nverify(submit, \"click\");\nverify(location_input, \"keydown\");\nconst message = document.querySelector(\"#message\");\nconst temperature = document.querySelector(\"#tempData\");\nconst pluie = document.querySelector(\"#tempRain\");\nconst weatherData = document.querySelectorAll(\".data\");\nconst weatherDate = document.querySelector(\"#weather-date\");\nconst setTime = document.querySelector(\"#setTime\");\nconst weatherHeure = document.querySelector(\"#weather-heure\");\nconst weatherDay = document.querySelector(\"#weather-day\");\nconst compass = document.querySelector(\"#compass\");\nconst month = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\nconst day = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\n\n\ndocument.onreadystatechange = function () {\n    console.log(\"onreadystatechange marche\");\n    if (document.readyState === \"complete\") {\n        console.log(\"if complete marche\");\n        if (navigator.geolocation) { /*demander l'autorisation d'obtenir la géolocalisation*/\n            navigator.geolocation.getCurrentPosition(function (position) {\n\n                let latitude = position.coords.latitude;\n                let longitude = position.coords.longitude;\n\n                let data = new FormData();\n\n                data.append(\"latitude\", latitude);\n                data.append(\"longitude\", longitude);\n\n                console.log(\"if geolocalisation marche\");\n                fetch(\"/weather/get\", {method: \"POST\", body: data})\n                    .then((retourReponse) => {\n                        return retourReponse.json();\n                    })\n                    .then((retourReponse) => {\n                        console.log(retourReponse);\n\n                    let chartTemp0 = Math.round(retourReponse.hourly.data[0].temperature);\n                    let chartTemp6 = Math.round(retourReponse.hourly.data[6].temperature);\n                    let chartTemp12 = Math.round(retourReponse.hourly.data[12].temperature);\n                    let chartTemp18 = Math.round(retourReponse.hourly.data[18].temperature);\n                    let chartTemp23 = Math.round(retourReponse.hourly.data[23].temperature);\n\n                    let chartPrecip0 = Math.round(retourReponse.hourly.data[0].precipProbability);\n                    let chartPrecip6 = Math.round(retourReponse.hourly.data[6].precipProbability);\n                    let chartPrecip12 = Math.round(retourReponse.hourly.data[12].precipProbability);\n                    let chartPrecip18 = Math.round(retourReponse.hourly.data[18].precipProbability);\n                    let chartPrecip23 = Math.round(retourReponse.hourly.data[23].precipProbability);\n\n                    console.log(chartTemp23);\n\n                    new Chart(document.getElementById(\"summaryChart\"), {\n                        type: 'line',\n                        data: {\n                          labels: ['00:00', '06:00', '12:00', '18:00', '23:00'],\n                          datasets: [{ \n                              data: [chartTemp0, chartTemp6, chartTemp12, chartTemp18, chartTemp23],\n                              yAxisID: 'temperature',\n                              label: \"Température\",\n                              borderColor: \"#980000\",\n                              fill: true\n                            }, { \n                              data: [chartPrecip0, chartPrecip6, chartPrecip12, chartPrecip18, chartPrecip23],\n                              yAxisID: 'rain',\n                              label: \"Précipitation\",\n                              borderColor: \"#030340\",\n                              fill: true\n                            }\n                          ]\n                        },\n                        options: {\n                            legend:{\n                                display: false\n                            },\n                            title: {\n                                display: false,\n                                text: 'World population per region (in millions)'\n                            },\n                            scales: {\n                                yAxes: [{\n                                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                                    display: true,\n                                    position: 'left',\n                                    id: 'temperature',\n                                }, {\n                                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                                    display: true,\n                                    position: 'right',\n                                    id: 'rain',\n                                    ticks: {\n                                        min: 0,\n                                        max: 100\n                                    },\n                    \n                                    // grid line settings\n                                    gridLines: {\n                                        drawOnChartArea: false, // only want the grid lines for one axis to show up\n                                    },\n                                }],\n                            }\n                        }\n                      });\n                      \n\n\n\n\n\n\n                    // let phase = Math.round((retourReponse.daily.data[0].moonPhase-0)*0.25/(1-0))/0.25; // bring to 0-1 range\n                    // phase = phase*(1-0) + 0;\n\n                    let phase = (Math.round(retourReponse.daily.data[0].moonPhase * 8) / 8);\n                    let moon = \"\";\n\n                    switch (phase) {\n                        case 0 || 1:\n                            moon = \"Nouvelle lune\";\n                            break;\n                        case 0.125 || 0.775:\n                            moon = \"Croissant de lune\";                            \n                            break;\n                        case 0.25 || 0.75:\n                            moon = \"Demi lune\";                                                        \n                            break;\n                        case 0.5:\n                            moon = \"Pleine lune\";                                                        \n                            break;\n                    }\n\n                    // .toFixed(2)\n\n                    let currentDate = new Date(retourReponse.currently.time * 1000);\n\n                    let set = new Date(retourReponse.daily.data[0].sunsetTime * 1000);\n                    let rise = new Date(retourReponse.daily.data[0].sunriseTime * 1000);\n                    let riseHour, riseMinute, setHour, setMinute;\n\n                    rise.getHours() < 10 ? riseHour = \"0\" + rise.getHours() : riseHour = rise.getHours();\n                    rise.getMinutes() < 10 ? riseMinute = \"0\" + rise.getMinutes() : riseMinute = rise.getMinutes();\n\n                    set.getHours() < 10 ? setHour = \"0\" + set.getHours() : setHour = set.getHours();\n                    set.getMinutes() < 10 ? setMinute = \"0\" + set.getMinutes() : setMinute = set.getMinutes();\n                    \n                    weatherDay.innerHTML = day[currentDate.getDay()];\n                    weatherDate.innerHTML = currentDate.getDate() + \" \" + month[currentDate.getMonth()] + \" \" + currentDate.getFullYear();\n                    message.innerHTML = retourReponse.currently.summary;\n                    temperature.innerHTML = Math.round(retourReponse.currently.temperature) + \"°C\";\n                    pluie.innerHTML = Math.round(retourReponse.currently.precipProbability * 100) + \"%\";\n                    weatherData[0].innerHTML = Math.round(retourReponse.currently.pressure) + \" hpa\";\n                    weatherData[1].innerHTML = Math.round(retourReponse.currently.windSpeed) + \" m/s\";\n                    weatherData[2].innerHTML = Math.round(retourReponse.currently.humidity) + \"%\";\n                    weatherData[3].innerHTML = Math.round(retourReponse.currently.precipProbability * 100) + \"%\";\n                    weatherData[4].innerHTML = Math.round(retourReponse.currently.temperature) + \"°C\";\n                    weatherData[5].innerHTML = Math.round(retourReponse.currently.uvIndex);\n                    weatherData[6].innerHTML = Math.round(retourReponse.currently.visibility) + \" km\";\n                    weatherData[7].innerHTML = riseHour + \":\" + riseMinute;\n                    weatherData[8].innerHTML = setHour + \":\" + setMinute;\n                    weatherData[9].innerHTML = moon;\n                    setTime.value = currentDate.getHours();\n                    weatherHeure.innerHTML = currentDate.getHours() + \":00\";\n                    compass.style.transform = \"rotate(\" + retourReponse.currently.windBearing + \"deg\";\n\n                    \n                    setTime.addEventListener(\"change\", () => {\n                        \n                        message.innerHTML = retourReponse.hourly.data[setTime.value].summary;\n                        temperature.innerHTML = Math.round(retourReponse.hourly.data[setTime.value].temperature) + \"°C\";\n                        pluie.innerHTML = Math.round(retourReponse.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n                        weatherData[0].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].pressure) + \" hpa\";\n                        weatherData[1].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].windSpeed) + \" m/s\";\n                        weatherData[2].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].humidity) + \"%\";\n                        weatherData[3].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].precipProbability * 100) + \"%\";\n                        weatherData[4].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].temperature) + \"°C\";\n                        weatherData[5].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].uvIndex);\n                        weatherData[6].innerHTML = Math.round(retourReponse.hourly.data[setTime.value].visibility) + \" km\";\n                        weatherHeure.innerHTML = setTime.value + \":00\";\n                        compass.style.transform = \"rotate(\" + retourReponse.hourly.data[setTime.value].windBearing + \"deg\";\n\n                    })\n\n                }).catch((error) => {\n                    console.log(error);\n                });\n            })\n        }\n    }\n}\nconst connexionLogin = document.querySelector(\"#connexion_login\");\nconst loginLogin = document.querySelector(\"#login_login\");\nconst passLogin = document.querySelector(\"#pass_login\");\n\nfunction verify(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n           \n            let data = new FormData();\n            data.append(\"login\", loginLogin.value);\n            data.append(\"pass\", passLogin.value);\n        \n            fetch(\"/login/verif\", {method: \"POST\", body: data})\n            .then( (result) => { return result.json() } )\n            .then( (result) => {\n                // console.log(result.error);\n                if(!result.error){\n                    console.log(result);\n                    window.location.replace(\"/user\");\n                } else {\n                    document.querySelector(\"#error\").innerHTML = result.error;\n                }\n            });\n        }\n    })\n}\n\nverify(connexionlogin, \"click\");\nverify(loginlogin, \"keydown\");\nverify(passlogin, \"keydown\");\nconst avatarMale = document.querySelector(\"#maleButton\");\nconst avatarFemale = document.querySelector(\"#femaleButton\");\n\nconst avatar_m1 = document.querySelector(\"#avatar_m1\");\nconst avatar_m2 = document.querySelector(\"#avatar_m2\");\nconst avatar_m3 = document.querySelector(\"#avatar_m3\");\nconst avatar_m4 = document.querySelector(\"#avatar_m4\");\nconst avatar_f1 = document.querySelector(\"#avatar_f1\");\nconst avatar_f2 = document.querySelector(\"#avatar_f2\");\nconst avatar_f3 = document.querySelector(\"#avatar_f3\");\nconst avatar_f4 = document.querySelector(\"#avatar_f4\");\n\nconst array_avatar = document.querySelectorAll(\".img-fluid\");\nconst array_skin = document.querySelectorAll(\".my-2\");\n\nconst skin1 = document.querySelector(\"#skin1\");\nconst skin2 = document.querySelector(\"#skin2\");\nconst skin3 = document.querySelector(\"#skin3\");\nconst skin4 = document.querySelector(\"#skin4\");\n\nconst genre_male = document.querySelector(\"#maleButton\");\nconst genre_female = document.querySelector(\"#femaleButton\");\n\n\navatarMale.addEventListener(\"click\", (e) => {\n    genre_male.classList.add(\"genre\");\n    genre_female.classList.remove(\"genre\");\n    for (let j = 0; j < array_skin.length; j++) {\n        array_skin[j].addEventListener(\"click\", (e) => {\n            for (let i = 0; i < array_avatar.length; i++) {\n                array_avatar[i].classList.add(\"invisible\");\n            }\n            array_avatar[j].classList.remove(\"invisible\");\n        })\n    }\n})\n\navatarFemale.addEventListener(\"click\", (e) => {\n    genre_female.classList.add(\"genre\");\n    genre_male.classList.remove(\"genre\");\n    for (let j = 0; j < array_skin.length; j++) {\n        array_skin[j].addEventListener(\"click\", (e) => {\n            for (let i = 0; i < array_avatar.length; i++) {\n                array_avatar[i].classList.add(\"invisible\");\n            }\n            array_avatar[j+4].classList.remove(\"invisible\");\n        })\n    }\n})\nnew Chart(document.getElementById(\"summaryChart\"), {\n    type: 'line',\n    data: {\n      labels: ['00:00', '06:00', '12:00', '18:00', '23:00'],\n      datasets: [{ \n          data: [1, 3, 8, 5, 2],\n          yAxisID: 'temperature',\n          label: \"Température\",\n          borderColor: \"#980000\",\n          fill: true\n        }, { \n          data: [0, 2, 5, 10, 3],\n          yAxisID: 'rain',\n          label: \"Précipitation\",\n          borderColor: \"#030340\",\n          fill: true\n        }\n      ]\n    },\n    options: {\n        legend:{\n            display: false\n        },\n        title: {\n            display: false,\n            text: 'World population per region (in millions)'\n        },\n        scales: {\n            yAxes: [{\n                type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                display: true,\n                position: 'left',\n                id: 'temperature',\n            }, {\n                type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n                display: true,\n                position: 'right',\n                id: 'rain',\n                ticks: {\n                    min: 0,\n                    max: 100\n                },\n\n                // grid line settings\n                gridLines: {\n                    drawOnChartArea: false, // only want the grid lines for one axis to show up\n                },\n            }],\n        }\n    }\n  });\n  \n// $('.message a').click(function(){\n//     $('form').animate({height: \"toggle\", opacity: \"toggle\"}, \"slow\");\n//  });\n\nconst validerRegister = document.querySelector(\"#valider-register\");\nconst mailRegister = document.querySelector(\"#mail-register\");\nconst passRegister = document.querySelector(\"#pass-register\");\nconst prenomRegister = document.querySelector(\"#prenom-register\");\nconst sexeRegister = document.querySelector(\"#sexe-register\");\nconst adresseRegister = document.querySelector(\"#adresse-register\");\nconst villeRegister = document.querySelector(\"#ville-register\");\nconst colorRegister = document.querySelector(\"#color-register\");\n\n\n\ndocument.onreadystatechange = function () {\n    if (document.readyState === \"complete\") {\n        if (navigator.geolocation) { /*demander l'autorisation d'obtenir la géolocalisation*/\n            navigator.geolocation.getCurrentPosition(function (position) {\n\n                let latitude = position.coords.latitude;\n                let longitude = position.coords.longitude;\n                let link = \"https://nominatim.openstreetmap.org/reverse?format=json&lat=\" + latitude + \"&lon=\" + longitude;\n\n                fetch(link, {method: \"POST\"})\n                .then( (result) => { return result.json() } )\n                .then( (result) => {\n                // console.log(result);\n\n                let ville = typeof result.address.city !== 'undefined' ? result.address.city:result.address.town; \n                let route = result.address.road;\n                \n                adresseRegister.value = route;\n                villeRegister.value = ville;\n\n                });\n\n            })\n        }\n    }\n}\n\n\n\n\n\ncolorRegister.addEventListener('click', () => {\n    colorRegister.style.backgroundColor = colorRegister.value; \n})\n\nfunction verifyRegister(element, event) {\n\n    element.addEventListener(event, (e) => {\n\n        if (e.key === \"Enter\" || event === \"click\") {\n            let data = new FormData();\n            data.append(\"mail\", mailRegister.value);\n            data.append(\"pass\", passRegister.value);\n            data.append(\"prenom\", prenomRegister.value);\n            data.append(\"sexe\", sexeRegister.value);\n            data.append(\"color\", colorRegister.value);\n            data.append(\"adresse\", adresseRegister.value);\n            data.append(\"ville\", villeRegister.value);\n        \n            fetch(\"/register/verif\", {method: \"POST\", body: data})\n            .then( (result) => { return result.json() } )\n            .then( (result) => {\n                console.log(result);\n                if(!result.message){\n                    document.querySelector(\".message\").innerHTML = \"Inscription réussie, vous allez être redirigé.\";\n                    // setTimeout(function(){\n                    //     window.location.replace(\"/weather\");\n                    // }, 3000);\n                } else {\n                    document.querySelector(\".message\").innerHTML = \"\";\n                    for (let i = 0; i < result.message.length; i++) {\n                        document.querySelector(\".message\").innerHTML += result.message[i] + '</br>';\n                    }\n                }\n                }\n            );\n        }\n    })\n}\n\nverifyRegister(validerRegister, \"click\");\nverifyRegister(mailRegister, \"keydown\");\nverifyRegister(passRegister, \"keydown\");\nverifyRegister(prenomRegister, \"keydown\");\nverifyRegister(adresseRegister, \"keydown\");\nverifyRegister(villeRegister, \"keydown\");\n"]}